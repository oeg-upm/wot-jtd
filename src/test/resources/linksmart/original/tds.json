{
  "@context": "https://linksmart.eu/thing-directory/context.jsonld",
  "@type": "Catalog",
  "items": [
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "htv": "http://www.w3.org/2011/http#",
          "iot": "http://iotschema.org/",
          "om": "http://www.wurvoc.org/vocabularies/om-1.8/"
        }
      ],
      "@type": "Thing",
      "actions": {
        "startAIT": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://192.168.30.132:8887/antwapp/tvcontrol/hybridcast{?mode}",
              "htv:methodName": "POST",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "input": {
            "properties": {
              "hybridcast": {
                "properties": {
                  "aiturl": {
                    "title": "The Aiturl Schema",
                    "type": "string"
                  },
                  "appid": {
                    "maximum": 4294967295,
                    "minimum": 0,
                    "title": "The Appid Schema",
                    "type": "number"
                  },
                  "orgid": {
                    "maximum": 65535,
                    "minimum": 0,
                    "title": "The Orgid Schema",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "resource": {
                "properties": {
                  "original_network_id": {
                    "maximum": 65535,
                    "minimum": 0,
                    "title": "The Original_network_id Schema",
                    "type": "number"
                  },
                  "service_id": {
                    "maximum": 65535,
                    "minimum": 0,
                    "title": "The Service_id Schema",
                    "type": "number"
                  },
                  "transport_stream_id": {
                    "maximum": 65535,
                    "minimum": 0,
                    "title": "The Transport_stream_id Schema",
                    "type": "number"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "safe": true,
          "uriVariables": {
            "mode": {
              "enum": [
                "tune",
                "app"
              ],
              "title": "launchmode: ",
              "type": "string"
            }
          }
        }
      },
      "created": "2020-12-18T12:44:28.620627722Z",
      "description": "HybridcastConnectEmulator:Antwapp",
      "descriptions": {
        "en": "HybridcastConnectEmulator:Antwapp",
        "ja": "ハイコネエミュレーター"
      },
      "events": {
        "hybridcastCompanionConnectListener": {
          "data": {
            "type": "object"
          },
          "forms": [
            {
              "contentType": "application/json",
              "href": "ws://192.168.30.132:8887/antwapp/websocket",
              "op": "subscribeevent"
            }
          ],
          "properties": {
            "value": {
              "type": "number"
            }
          },
          "title": "Message is emitted.",
          "titles": {
            "en": "Message is emitted.",
            "ja": "メッセージが送出された．"
          }
        }
      },
      "id": "URN:nhkrd:antwapp",
      "modified": "2020-12-18T12:44:28.620627722Z",
      "properties": {
        "media": {
          "description": "available media on a TV set",
          "descriptions": {
            "en": "available media on a TV set",
            "ja": "メディア利用可否"
          },
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://192.168.30.132:8887/antwapp/tvcontrol/channels?media=TD",
              "htv:methodName": "GET",
              "op": "readproperty",
              "scopes": [
                "full_access"
              ]
            }
          ],
          "properties": {
            "body": {
              "properties": {
                "BS": {
                  "enum": [
                    "Available",
                    "NotAvailable"
                  ],
                  "title": "Availability of receiving Broadcasting Satelite",
                  "type": "string"
                },
                "CS": {
                  "enum": [
                    "Available",
                    "NotAvailable"
                  ],
                  "title": "Availability of receiving Comunication Satelite",
                  "type": "string"
                },
                "TD": {
                  "enum": [
                    "Available",
                    "NotAvailable"
                  ],
                  "title": "Availability of receiving Telestrial Digital broadcasting",
                  "type": "string"
                },
                "created_at": {
                  "title": "The date of the file created",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "head": {
              "properties": {
                "code": {
                  
                },
                "message": {
                  
                }
              },
              "type": "object"
            }
          },
          "title": "available media on a TV set",
          "titles": {
            "en": "available media on a TV set",
            "ja": "メディア利用可否"
          }
        },
        "receiverStatus": {
          "description": "HybridcastReceiverStatus",
          "descriptions": {
            "en": "HybridcastReceiverStatus",
            "ja": "受信機状態"
          },
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://192.168.30.132:8887/antwapp/tvcontrol/status",
              "htv:methodName": "GET",
              "op": "readproperty"
            }
          ],
          "properties": {
            "body": {
              "properties": {
                "status": {
                  "properties": {
                    "companion_apps": {
                      "title": "The number of Companion_apps",
                      "type": "number"
                    },
                    "hybridcast": {
                      "enum": [
                        "NotStarted",
                        "Running"
                      ],
                      "title": "The status of Hybridcast Browser",
                      "type": "string"
                    },
                    "resource": {
                      "properties": {
                        "original_network_id": {
                          "maximum": 65535,
                          "minimum": 0,
                          "title": "The Original_network_id of broadcasting",
                          "type": "number"
                        },
                        "service_id": {
                          "maximum": 65535,
                          "minimum": 0,
                          "title": "Service_id of broadcasting",
                          "type": "number"
                        },
                        "transport_stream_id": {
                          "maximum": 65535,
                          "minimum": 0,
                          "title": "The Transport_stream_id of broadcasting",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "head": {
              "properties": {
                "code": {
                  
                },
                "message": {
                  
                }
              },
              "type": "object"
            }
          },
          "title": "HybridcastReceiverStatus",
          "titles": {
            "en": "HybridcastReceiverStatus",
            "ja": "受信機状態"
          }
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "title": "HybridcastConnectReceiver",
      "titles": {
        "en": "HybridcastConnectReceiver",
        "ja": "ハイコネプロトコル対応受信機"
      },
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en"
        }
      ],
      "@type": "Thing",
      "actions": {
        "abort": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://esiremotelab.esi.ei.tum.de:8080/Virtual-Coffee-Machine_1_1/actions/abort",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "safe": false
        },
        "brew": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://esiremotelab.esi.ei.tum.de:8080/Virtual-Coffee-Machine_1_1/actions/brew",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "input": {
            "enum": [
              "latte-machiato",
              "espresso",
              "cappuccino"
            ],
            "type": "string"
          },
          "safe": false
        },
        "shutdown": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://esiremotelab.esi.ei.tum.de:8080/Virtual-Coffee-Machine_1_1/actions/shutdown",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "safe": false
        }
      },
      "created": "2020-12-18T12:43:59.910105655Z",
      "description": "A virtual coffee machine to learn the WoT TD standard",
      "events": {
        "error": {
          "data": {
            "type": "string"
          },
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://esiremotelab.esi.ei.tum.de:8080/Virtual-Coffee-Machine_1_1/events/error",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            }
          ]
        },
        "maintenance": {
          "data": {
            "type": "string"
          },
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://esiremotelab.esi.ei.tum.de:8080/Virtual-Coffee-Machine_1_1/events/maintenance",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            }
          ]
        }
      },
      "forms": [
        {
          "contentType": "application/json",
          "href": "http://esiremotelab.esi.ei.tum.de:8080/Virtual-Coffee-Machine_1_1/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties",
            "writeallproperties",
            "writemultipleproperties"
          ]
        }
      ],
      "id": "de:tum:ei:esi:fp:coffee:1-1",
      "modified": "2020-12-18T12:43:59.910105655Z",
      "properties": {
        "binStatus": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://esiremotelab.esi.ei.tum.de:8080/Virtual-Coffee-Machine_1_1/properties/binStatus",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            }
          ],
          "maximum": 100,
          "minimum": 0,
          "observable": false,
          "readOnly": true,
          "type": "integer",
          "unit": "%",
          "writeOnly": false
        },
        "coffeeStatus": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://esiremotelab.esi.ei.tum.de:8080/Virtual-Coffee-Machine_1_1/properties/coffeeStatus",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            }
          ],
          "maximum": 100,
          "minimum": 0,
          "observable": false,
          "readOnly": true,
          "type": "integer",
          "unit": "%",
          "writeOnly": false
        },
        "state": {
          "enum": [
            "Ready",
            "Brewing",
            "Error"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://esiremotelab.esi.ei.tum.de:8080/Virtual-Coffee-Machine_1_1/properties/state",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": true,
          "type": "string",
          "writeOnly": false
        },
        "waterStatus": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://esiremotelab.esi.ei.tum.de:8080/Virtual-Coffee-Machine_1_1/properties/waterStatus",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            }
          ],
          "maximum": 100,
          "minimum": 0,
          "observable": false,
          "readOnly": true,
          "type": "integer",
          "unit": "%",
          "writeOnly": false
        }
      },
      "security": "nosec_sc",
      "securityDefinitions": {
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "title": "Virtual-Coffee-Machine_1_1",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en"
        }
      ],
      "@type": "Thing",
      "actions": {
        "abort": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "coap://esiremotelab.esi.ei.tum.de:5683/Virtual-Coffee-Machine_2_1/actions/abort",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "safe": false
        },
        "brew": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "coap://esiremotelab.esi.ei.tum.de:5683/Virtual-Coffee-Machine_2_1/actions/brew",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "input": {
            "enum": [
              "latte-machiato",
              "espresso",
              "cappuccino"
            ],
            "type": "string"
          },
          "safe": false
        },
        "shutdown": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "coap://esiremotelab.esi.ei.tum.de:5683/Virtual-Coffee-Machine_2_1/actions/shutdown",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "safe": false
        }
      },
      "created": "2020-12-18T12:44:09.583854754Z",
      "description": "A virtual coffee machine to learn the WoT TD standard",
      "events": {
        "error": {
          "data": {
            "type": "string"
          },
          "forms": [
            {
              "contentType": "application/json",
              "href": "coap://esiremotelab.esi.ei.tum.de:5683/Virtual-Coffee-Machine_2_1/events/error",
              "op": "subscribeevent"
            }
          ]
        },
        "maintenance": {
          "data": {
            "type": "string"
          },
          "forms": [
            {
              "contentType": "application/json",
              "href": "coap://esiremotelab.esi.ei.tum.de:5683/Virtual-Coffee-Machine_2_1/events/maintenance",
              "op": "subscribeevent"
            }
          ]
        }
      },
      "id": "de:tum:ei:esi:fp:coffee:2-1",
      "modified": "2020-12-18T12:44:09.583854754Z",
      "properties": {
        "binStatus": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "coap://esiremotelab.esi.ei.tum.de:5683/Virtual-Coffee-Machine_2_1/properties/binStatus",
              "op": [
                "readproperty"
              ]
            }
          ],
          "maximum": 100,
          "minimum": 0,
          "observable": false,
          "readOnly": true,
          "type": "integer",
          "unit": "%",
          "writeOnly": false
        },
        "coffeeStatus": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "coap://esiremotelab.esi.ei.tum.de:5683/Virtual-Coffee-Machine_2_1/properties/coffeeStatus",
              "op": [
                "readproperty"
              ]
            }
          ],
          "maximum": 100,
          "minimum": 0,
          "observable": false,
          "readOnly": true,
          "type": "integer",
          "unit": "%",
          "writeOnly": false
        },
        "state": {
          "enum": [
            "Ready",
            "Brewing",
            "Error"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "coap://esiremotelab.esi.ei.tum.de:5683/Virtual-Coffee-Machine_2_1/properties/state",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": true,
          "type": "string",
          "writeOnly": false
        },
        "waterStatus": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "coap://esiremotelab.esi.ei.tum.de:5683/Virtual-Coffee-Machine_2_1/properties/waterStatus",
              "op": [
                "readproperty"
              ]
            }
          ],
          "maximum": 100,
          "minimum": 0,
          "observable": false,
          "readOnly": true,
          "type": "integer",
          "unit": "%",
          "writeOnly": false
        }
      },
      "security": "nosec_sc",
      "securityDefinitions": {
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "title": "Virtual-Coffee-Machine_2_1",
      "ttl": 86400
    },
    {
      "@context": "https://www.w3.org/2019/wot/td/v1",
      "actions": {
        "beep": {
          "description": "Beep for 1 sec",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/uarm/actions/beep",
              "htv:methodName": "POST",
              "op": "invokeaction"
            },
            {
              "contentType": "application/json",
              "href": "mqtt://dbbroker.local:1883/uarm/actions/beep",
              "mqv:controlPacketValue": "PUBLISH",
              "op": "invokeaction"
            }
          ],
          "idempotent": true,
          "safe": false,
          "title": "Beep"
        },
        "beepWithTime": {
          "description": "Beep for a time set between 1-3 sec",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/uarm/actions/beepwithtime",
              "htv:methodName": "POST",
              "op": "invokeaction"
            },
            {
              "contentType": "application/json",
              "href": "mqtt://dbbroker.local:1883/uarm/actions/beepwithtime",
              "mqv:commandCode": 3,
              "op": "invokeaction"
            }
          ],
          "idempotent": true,
          "input": {
            "maximum": 3,
            "minimum": 1,
            "type": "integer"
          },
          "safe": false,
          "title": "Beep with Time set"
        },
        "goHome": {
          "description": "Go to the set home point",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/uarm/actions/gohome",
              "htv:methodName": "POST",
              "op": "invokeaction"
            },
            {
              "contentType": "application/json",
              "href": "mqtt://dbbroker.local:1883/uarm/actions/gohome",
              "mqv:controlPacketValue": "PUBLISH",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "safe": false,
          "title": "Go Home"
        },
        "goTo": {
          "description": "Move to Position x,y,z given by the user with fixed speed=3000",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/uarm/actions/goto",
              "htv:methodName": "POST",
              "op": "invokeaction"
            },
            {
              "contentType": "application/json",
              "href": "mqtt://dbbroker.local:1883/uarm/actions/goto",
              "mqv:controlPacketValue": "PUBLISH",
              "op": "invokeaction"
            }
          ],
          "idempotent": true,
          "input": {
            "properties": {
              "x": {
                "maximum": 250,
                "minimum": 50,
                "type": "integer"
              },
              "y": {
                "maximum": 350,
                "minimum": -350,
                "type": "number"
              },
              "z": {
                "maximum": 60,
                "minimum": -5,
                "type": "integer"
              }
            },
            "required": [
              "x",
              "y",
              "z"
            ],
            "type": "object"
          },
          "safe": false,
          "title": "Go to position"
        },
        "goWithSpeed": {
          "description": "Move to described Position with set speed",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/uarm/actions/gowithspeed",
              "htv:methodName": "POST",
              "op": "invokeaction"
            },
            {
              "contentType": "application/json",
              "href": "mqtt://dbbroker.local:1883/uarm/actions/gowithspeed",
              "mqv:controlPacketValue": "PUBLISH",
              "op": "invokeaction"
            }
          ],
          "idempotent": true,
          "input": {
            "properties": {
              "speed": {
                "maximum": 10000,
                "minimum": 100,
                "type": "integer"
              },
              "x": {
                "maximum": 250,
                "minimum": 50,
                "type": "integer"
              },
              "y": {
                "maximum": 350,
                "minimum": -350,
                "type": "integer"
              },
              "z": {
                "maximum": 60,
                "minimum": -5,
                "type": "integer"
              }
            },
            "required": [
              "x",
              "y",
              "z",
              "speed"
            ],
            "type": "object"
          },
          "safe": false,
          "title": "Go to with speed"
        },
        "gripClose": {
          "description": "Closes the grip",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/uarm/actions/gripclose",
              "htv:methodName": "POST",
              "op": "invokeaction"
            },
            {
              "contentType": "application/json",
              "href": "mqtt://dbbroker.local:1883/uarm/actions/gripclose",
              "mqv:controlPacketValue": "PUBLISH",
              "op": "invokeaction"
            }
          ],
          "idempotent": true,
          "safe": false,
          "title": "Close Grip"
        },
        "gripOpen": {
          "description": "Opens the grip",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/uarm/actions/gripopen",
              "htv:methodName": "POST",
              "op": "invokeaction"
            },
            {
              "contentType": "application/json",
              "href": "mqtt://dbbroker.local:1883/uarm/actions/gripopen",
              "mqv:controlPacketValue": "PUBLISH",
              "op": "invokeaction"
            }
          ],
          "idempotent": true,
          "safe": false,
          "title": "Open Grip"
        },
        "sequence1": {
          "description": "Routine to move to a position and close the grip",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/uarm/actions/sequence1",
              "htv:methodName": "POST",
              "op": "invokeaction"
            },
            {
              "contentType": "application/json",
              "href": "mqtt://dbbroker.local:1883/uarm/actions/sequence1",
              "mqv:controlPacketValue": "PUBLISH",
              "op": "invokeaction"
            }
          ],
          "idempotent": true,
          "safe": false,
          "title": "Grip Routine"
        },
        "turnLeft": {
          "description": "Turn robot arm to left for 1 step",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/uarm/actions/turnleft",
              "htv:methodName": "POST",
              "op": "invokeaction"
            },
            {
              "contentType": "application/json",
              "href": "mqtt://dbbroker.local:1883/uarm/actions/turnleft",
              "mqv:controlPacketValue": "PUBLISH",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "input": {
            "properties": {
              "y": {
                "maximum": 350,
                "miniqmum": -350,
                "type": "number"
              }
            },
            "required": [
              "y"
            ],
            "type": "object"
          },
          "safe": false,
          "title": "Turn Left"
        },
        "turnRight": {
          "description": "Turn robot arm to right for a certain distance (has yet to be implemented in loT.py)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/uarm/actions/turnright",
              "htv:methodName": "POST",
              "op": "invokeaction"
            },
            {
              "contentType": "application/json",
              "href": "mqtt://dbbroker.local:1883/uarm/actions/turnright",
              "mqv:controlPacketValue": "PUBLISH",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "input": {
            "properties": {
              "y": {
                "maximum": 350,
                "minimum": -350,
                "type": "number"
              }
            },
            "required": [
              "y"
            ],
            "type": "object"
          },
          "safe": false,
          "title": "Turn Right"
        }
      },
      "created": "2020-12-18T12:44:08.019125537Z",
      "id": "de:tum:ei:esi:uArm",
      "modified": "2020-12-18T12:44:08.019125537Z",
      "properties": {
        "homeLoc": {
          "description": "Home location, can be set to a new value. goHome action goes there",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/uarm/properties/homeloc",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "mqtt://dbbroker.local:1883/uarm/properties/homeloc",
              "mqv:controlPacketValue": "SUBSCRIBE",
              "op": [
                "readproperty",
                "observeproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "mqtt://dbbroker.local:1883/uarm/properties/homeloc/writeproperty",
              "mqv:controlPacketValue": "PUBLISH",
              "op": "writeproperty"
            }
          ],
          "properties": {
            "x": {
              "maximum": 250,
              "minimum": 50,
              "type": "integer"
            },
            "y": {
              "maximum": 350,
              "minimum": -350,
              "type": "integer"
            },
            "z": {
              "maximum": 60,
              "minimum": -5,
              "type": "integer"
            }
          },
          "required": [
            "x",
            "y",
            "z"
          ],
          "title": "Home location",
          "type": "object"
        },
        "location": {
          "description": "Gives back the current location",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/uarm/properties/location",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "mqtt://dbbroker.local:1883/uarm/properties/location",
              "mqv:controlPacketValue": "SUBSCRIBE",
              "op": [
                "readproperty",
                "observeproperty"
              ]
            }
          ],
          "properties": {
            "x": {
              "maximum": 250,
              "minimum": 50,
              "type": "integer"
            },
            "y": {
              "maximum": 350,
              "minimum": -350,
              "type": "integer"
            },
            "z": {
              "maximum": 60,
              "minimum": -5,
              "type": "integer"
            }
          },
          "required": [
            "x",
            "y",
            "z"
          ],
          "title": "Return location",
          "type": "object"
        }
      },
      "security": "basic_sc",
      "securityDefinitions": {
        "basic_sc": {
          "in": "header",
          "scheme": "basic"
        }
      },
      "title": "Uarm",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en"
        }
      ],
      "@type": "Thing",
      "actions": {
        "goHome": {
          "description": "Returns the pan and tilt to their home position which is at 0 and 0 degrees",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/PanTilt1/actions/goHome",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "safe": false,
          "title": "Go Home"
        },
        "moveContinuously": {
          "description": "Moves the tilt and pan platform with the speeds given in input until a stop action is invoked or limits are reached",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/PanTilt1/actions/moveContinuously",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "input": {
            "properties": {
              "panSpeed": {
                "description": "The speed at which the platform moves. Negative values for right and positive values for left",
                "maximum": 15,
                "minimum": -15,
                "type": "number",
                "unit": "angle per sec"
              },
              "tiltSpeed": {
                "description": "The speed at which the tilt platform moves. Negative values for moving up and positive values for moving down",
                "maximum": 15,
                "minimum": -15,
                "type": "number",
                "unit": "angle per sec"
              }
            },
            "required": [
              "panSpeed",
              "tiltSpeed"
            ],
            "type": "object"
          },
          "safe": false,
          "title": "Move Continuously"
        },
        "moveTo": {
          "description": "Moves the tilt and pan platform to the angles given in input",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/PanTilt1/actions/moveTo",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "input": {
            "properties": {
              "panAngle": {
                "maximum": 90,
                "minimum": -90,
                "title": "Pan To",
                "type": "number",
                "unit": "degrees"
              },
              "tiltAngle": {
                "maximum": 80,
                "minimum": -80,
                "title": "Tilt To",
                "type": "number",
                "unit": "degrees"
              }
            },
            "required": [
              "panAngle",
              "tiltAngle"
            ],
            "type": "object"
          },
          "safe": false,
          "title": "Move To"
        },
        "panContinuously": {
          "description": "Moves the pan platform with speed given in input until a stop action is invoked or limits are reached",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/PanTilt1/actions/panContinuously",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "input": {
            "description": "The speed at which the platform moves. Negative values for right and positive values for left",
            "maximum": 15,
            "minimum": -15,
            "type": "number",
            "unit": "angle per sec"
          },
          "safe": false,
          "title": "Pan Continuously"
        },
        "panTo": {
          "description": "Moves the pan platform to the angle specific in the input",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/PanTilt1/actions/panTo",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "input": {
            "maximum": 90,
            "minimum": -90,
            "type": "number",
            "unit": "degrees"
          },
          "safe": false,
          "title": "Pan To"
        },
        "scan": {
          "description": "Scans left and right once, starting from the leftmost point. Tilt stays the same",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/PanTilt1/actions/scan",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "safe": false,
          "title": "Scan"
        },
        "stopMovement": {
          "description": "Stops any movement that was created with continuous movement calls",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/PanTilt1/actions/stopMovement",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "safe": false,
          "title": "Stop Movement"
        },
        "tiltContinuously": {
          "description": "Moves the tilt platform with speed given in input until a stop action is invoked or limits are reached",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/PanTilt1/actions/tiltContinuously",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "input": {
            "description": "The speed at which the platform moves. Negative values for moving up and positive values for moving down",
            "maximum": 15,
            "minimum": -15,
            "type": "number",
            "unit": "angle per sec"
          },
          "safe": false,
          "title": "Tilt Continuously"
        },
        "tiltTo": {
          "description": "Moves the tilt platform to the angle specific in the input",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/PanTilt1/actions/tiltTo",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "input": {
            "maximum": 80,
            "minimum": -80,
            "type": "number",
            "unit": "degrees"
          },
          "safe": false,
          "title": "Tilt To"
        }
      },
      "created": "2020-12-18T12:44:06.865818883Z",
      "description": "A Pan and Tilt platform on top of a Raspberry",
      "forms": [
        {
          "contentType": "application/json",
          "href": "https://esiremotelab.esi.ei.tum.de:8081/PanTilt1/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties"
          ]
        }
      ],
      "id": "esi:pantilt:2",
      "modified": "2020-12-18T12:44:09.197317255Z",
      "properties": {
        "panPosition": {
          "description": "The current position of the pan platform in degrees",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/PanTilt1/properties/panPosition",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            }
          ],
          "maximum": 90,
          "minimum": -90,
          "observable": false,
          "readOnly": true,
          "title": "Pan Position",
          "type": "number",
          "unit": "degrees",
          "writeOnly": false
        },
        "tiltPosition": {
          "description": "The current position of the tilt platform in degrees",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/PanTilt1/properties/tiltPosition",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            }
          ],
          "maximum": 80,
          "minimum": -80,
          "observable": false,
          "readOnly": true,
          "title": "Tilt Position",
          "type": "number",
          "unit": "degrees",
          "writeOnly": false
        }
      },
      "security": "basic_sc",
      "securityDefinitions": {
        "basic_sc": {
          "in": "header",
          "scheme": "basic"
        }
      },
      "title": "PanTilt1",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1"
      ],
      "actions": {
        
      },
      "base": "http://192.168.30.10/Things/urn:com:fujitsu:sensor-f4",
      "created": "2020-12-18T12:44:26.682208544Z",
      "events": {
        
      },
      "forms": [
        {
          "contentType": "application/json",
          "href": "allProperty",
          "op": [
            "readallproperties"
          ]
        }
      ],
      "id": "urn:com:fujitsu:sensor-f4",
      "modified": "2020-12-18T12:44:27.075218597Z",
      "properties": {
        "Accel": {
          "@type": "iot:Accel",
          "forms": [
            {
              "contentType": "application/json",
              "href": "properties/Accel",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "properties": {
            "accelX": {
              "type": "number"
            },
            "accelY": {
              "type": "number"
            },
            "accelZ": {
              "type": "number"
            },
            "rssi": {
              "type": "number"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "AirPressure": {
          "@type": "iot:AirPressure",
          "forms": [
            {
              "contentType": "application/json",
              "href": "properties/AirPressure",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "properties": {
            "airPressure": {
              "type": "number"
            },
            "rssi": {
              "type": "number"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "Humidity": {
          "@type": "iot:Humidity",
          "forms": [
            {
              "contentType": "application/json",
              "href": "properties/Humidity",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "properties": {
            "humidity": {
              "type": "number"
            },
            "rssi": {
              "type": "number"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "Light": {
          "@type": "iot:Light",
          "forms": [
            {
              "contentType": "application/json",
              "href": "properties/Light",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "properties": {
            "light": {
              "type": "number"
            },
            "rssi": {
              "type": "number"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "Pir": {
          "@type": "iot:Pir",
          "forms": [
            {
              "contentType": "application/json",
              "href": "properties/Pir",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "properties": {
            "pir": {
              "type": "number"
            },
            "rssi": {
              "type": "number"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "Proximity": {
          "@type": "iot:Proximity",
          "forms": [
            {
              "contentType": "application/json",
              "href": "properties/Proximity",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "properties": {
            "proximity": {
              "type": "number"
            },
            "rssi": {
              "type": "number"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "Temperature": {
          "@type": "iot:Temperature",
          "forms": [
            {
              "contentType": "application/json",
              "href": "properties/Temperature",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "properties": {
            "rssi": {
              "type": "number"
            },
            "temperature": {
              "type": "number"
            }
          },
          "readOnly": true,
          "type": "object"
        }
      },
      "security": "nosec_sc",
      "securityDefinitions": {
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "title": "fsensor-f4",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org",
          "s": "http://schema.org"
        }
      ],
      "created": "2020-12-18T12:44:29.779905498Z",
      "description": "Simple LED Lamp using Node-RED",
      "descriptions": {
        "en": "Simple LED Lamp using Node-RED",
        "ja": "Node-REDをつかったシンプルなLEDランプ"
      },
      "events": {
        "toggled": {
          "@type": [
            "iot:PropertyChangeEvent"
          ],
          "data": {
            "type": "object"
          },
          "forms": [
            {
              "contentType": "application/json",
              "href": "ws://ktorpi.local:1880/ws/toggled",
              "op": "subscribeevent",
              "security": [
                "no_sc"
              ]
            }
          ],
          "properties": {
            "value": {
              "type": "number"
            }
          },
          "title": "switch is toggled",
          "titles": {
            "en": "switch is toggled",
            "ja": "スイッチがトグルされた"
          }
        }
      },
      "id": "urn:dev:mac:b827ebfffe4b6d0b",
      "modified": "2020-12-18T12:44:29.779905498Z",
      "properties": {
        "led": {
          "@type": [
            "iot:SwitchStatus"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://ktorpi.local:1880/led",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            }
          ],
          "properties": {
            "value": {
              "type": "number"
            }
          },
          "title": "LED status",
          "titles": {
            "en": "LED status",
            "ja": "LEDの状態"
          },
          "type": "object"
        }
      },
      "s:elevation": "73.5",
      "s:latitude": "139.4720174",
      "s:longitude": "35.70352",
      "security": [
        "basic_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "in": "header",
          "scheme": "basic"
        },
        "no_sc": {
          "scheme": "nosec"
        }
      },
      "title": "myRasPiLED",
      "titles": {
        "en": "myRasPiLED",
        "ja": "私のラズパイLED"
      },
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en"
        }
      ],
      "@type": "",
      "actions": {
        "startBeltBackward": {
          "description": "This action starts moving the conveyor belt backward",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/ConveyorBelt1/actions/startBeltBackward",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "output": {
            "const": "Conveyor belt started"
          },
          "safe": false,
          "synchronous": true,
          "title": "Start conveyor belt"
        },
        "startBeltForward": {
          "description": "This action starts moving the conveyor belt forward",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/ConveyorBelt1/actions/startBeltForward",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "output": {
            "const": "Conveyor belt started"
          },
          "safe": false,
          "synchronous": true,
          "title": "Start conveyor belt"
        },
        "stopBelt": {
          "description": "This action stops moving the conveyor belt",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/ConveyorBelt1/actions/stopBelt",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "output": {
            "const": "Conveyor belt stopped"
          },
          "safe": false,
          "synchronous": false,
          "title": "Stop conveyor belt"
        }
      },
      "created": "2020-12-18T12:44:02.224521543Z",
      "description": "Stepper motor on a Rpi that makes a conveyor belt",
      "forms": [
        {
          "contentType": "application/json",
          "href": "https://esiremotelab.esi.ei.tum.de:8081/ConveyorBelt1/all/properties",
          "op": [
            "writeallproperties",
            "writemultipleproperties"
          ]
        }
      ],
      "id": "urn:dev:ops:32473-ConveyorBelt-001",
      "modified": "2020-12-18T12:44:02.224521543Z",
      "properties": {
        "speed": {
          "description": "Speed of the conveyor belt",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/ConveyorBelt1/properties/speed",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            }
          ],
          "maximum": 100,
          "minimum": 1,
          "observable": false,
          "readOnly": false,
          "title": "Speed",
          "type": "integer",
          "unit": "%",
          "writeOnly": false
        }
      },
      "security": "basic_sc",
      "securityDefinitions": {
        "basic_sc": {
          "in": "header",
          "scheme": "basic"
        }
      },
      "title": "ConveyorBelt1",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en"
        }
      ],
      "@type": "",
      "actions": {
        "startBeltBackward": {
          "description": "This action starts moving the conveyor belt backward",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/ConveyorBelt2/actions/startBeltBackward",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "output": {
            "const": "Conveyor belt started"
          },
          "safe": false,
          "synchronous": true,
          "title": "Start conveyor belt"
        },
        "startBeltForward": {
          "description": "This action starts moving the conveyor belt forward",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/ConveyorBelt2/actions/startBeltForward",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "output": {
            "const": "Conveyor belt started"
          },
          "safe": false,
          "synchronous": true,
          "title": "Start conveyor belt"
        },
        "stopBelt": {
          "description": "This action stops moving the conveyor belt",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/ConveyorBelt2/actions/stopBelt",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "output": {
            "const": "Conveyor belt stopped"
          },
          "safe": false,
          "synchronous": false,
          "title": "Stop conveyor belt"
        }
      },
      "created": "2020-12-18T12:44:03.767448355Z",
      "description": "Stepper motor on a Rpi that makes a conveyor belt",
      "forms": [
        {
          "contentType": "application/json",
          "href": "https://esiremotelab.esi.ei.tum.de:8081/ConveyorBelt2/all/properties",
          "op": [
            "writeallproperties",
            "writemultipleproperties"
          ]
        }
      ],
      "id": "urn:dev:ops:32473-ConveyorBelt-002",
      "modified": "2020-12-18T12:44:03.767448355Z",
      "properties": {
        "speed": {
          "description": "Speed of the conveyor belt",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/ConveyorBelt2/properties/speed",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            }
          ],
          "maximum": 100,
          "minimum": 1,
          "observable": false,
          "readOnly": false,
          "title": "Speed",
          "type": "integer",
          "unit": "%",
          "writeOnly": false
        }
      },
      "security": "basic_sc",
      "securityDefinitions": {
        "basic_sc": {
          "in": "header",
          "scheme": "basic"
        }
      },
      "title": "ConveyorBelt2",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en"
        }
      ],
      "actions": {
        "moveToObjectBlue": {
          "description": "Robot moves the object to the preprogrammed location for blue colored objects",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/DobotMagician/actions/moveToObjectBlue",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "output": {
            "const": "Dobot magician is moving object at the color dependent position"
          },
          "safe": false,
          "synchronous": true,
          "title": "Move to Object Blue"
        },
        "moveToObjectGreen": {
          "description": "Robot moves the object to the preprogrammed location for green colored objects",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/DobotMagician/actions/moveToObjectGreen",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "output": {
            "const": "Dobot magician is moving object at the color dependent position"
          },
          "safe": false,
          "synchronous": true,
          "title": "Move to Object Green"
        },
        "moveToObjectNone": {
          "description": "The robot moves the object to preprogrammed position for objects whose color cannot be detected",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/DobotMagician/actions/moveToObjectNone",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "output": {
            "const": "Dobot magician is moving object at the color dependent position"
          },
          "safe": false,
          "synchronous": true,
          "title": "Move to Object None"
        },
        "moveToObjectRed": {
          "description": "Robot moves the object to the preprogrammed location for red colored objects",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/DobotMagician/actions/moveToObjectRed",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "output": {
            "const": "Dobot magician is moving object at the color dependent position"
          },
          "safe": false,
          "synchronous": true,
          "title": "Move to Object Red"
        },
        "moveToStartPosition": {
          "description": "The robot moves to the default start position",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/DobotMagician/actions/moveToStartPosition",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "output": {
            "const": "At the start position"
          },
          "safe": false,
          "synchronous": true,
          "title": "Move to Start Position"
        },
        "pickObjectPosition1": {
          "description": "The robot picks the object at the preprogrammed position 1",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/DobotMagician/actions/pickObjectPosition1",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "output": {
            "const": "Dobot magician is picking object at position 1"
          },
          "safe": false,
          "synchronous": true,
          "title": "Pick Object at Position 1"
        },
        "pickObjectPosition2": {
          "description": "The robot picks the object at position 2",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/DobotMagician/actions/pickObjectPosition2",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "output": {
            "const": "Dobot magician is picking object at position 2"
          },
          "safe": false,
          "synchronous": true,
          "title": "Pick Object at Position 2"
        }
      },
      "created": "2020-12-18T12:44:00.300595487Z",
      "description": "Robot arm on a sliding rail",
      "forms": [
        {
          "contentType": "application/json",
          "href": "https://esiremotelab.esi.ei.tum.de:8081/DobotMagician/all/properties",
          "op": [
            "writeallproperties",
            "writemultipleproperties"
          ]
        }
      ],
      "id": "urn:dev:ops:32473-DobotMagician-001",
      "modified": "2020-12-18T12:44:00.300595487Z",
      "properties": {
        "position": {
          "description": "Position of the end effector. x,y,z are dependent of each other",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/DobotMagician/properties/position",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            }
          ],
          "observable": false,
          "properties": {
            "l": {
              "maximum": 1000,
              "minimum": 0,
              "type": "number"
            },
            "r": {
              "maximum": 180,
              "minimum": -180,
              "type": "number"
            },
            "x": {
              "maximum": 300,
              "minimum": 220,
              "type": "number"
            },
            "y": {
              "maximum": 40,
              "minimum": 5,
              "type": "number"
            },
            "z": {
              "maximum": 45,
              "minimum": -45,
              "type": "number"
            }
          },
          "readOnly": false,
          "type": "object",
          "writeOnly": false
        }
      },
      "security": "basic_sc",
      "securityDefinitions": {
        "basic_sc": {
          "in": "header",
          "scheme": "basic"
        }
      },
      "title": "DobotMagician",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en"
        }
      ],
      "created": "2020-12-18T12:44:02.60939425Z",
      "description": "Daylight information based on the GPS coordinates of the Hue Bridge",
      "id": "urn:dev:ops:32473-HueDaylight-1234",
      "modified": "2020-12-18T12:44:02.60939425Z",
      "properties": {
        "sensorInformation": {
          "description": "State, config and other metadata about the sensor",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/LabLocal/api/17AvYQeLM2T8Z3r0e3BiEvb9Qdwt36yU2BudTxrn/sensors/1",
              "op": [
                "readproperty"
              ]
            }
          ],
          "properties": {
            "config": {
              "description": "The configuration object with attributes corresponding to the sensor type. Attribute values represents configuration information.",
              "properties": {
                "battery": {
                  "description": "The current battery state in percent, only for battery powered devices. Not present when not provided on creation (CLIP sensors).",
                  "type": "integer"
                },
                "on": {
                  "description": "Turns the sensor on/off. When off, state changes of the sensor are not reflected in the sensor resource.",
                  "type": "boolean"
                },
                "reachable": {
                  "description": "Indicates whether communication with devices is possible. CLIP Sensors do not yet support reachable verification. Mandatory for all Sensors except ZGPSwitch, Daylight",
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "manufacturername": {
              "description": "The name of the device manufacturer.",
              "type": "string"
            },
            "modelid": {
              "description": "This parameter uniquely identifies the hardware model of the device for the given manufaturer.",
              "type": "string"
            },
            "name": {
              "description": "The human readable name of the sensor, can be changed by the user.",
              "type": "string"
            },
            "state": {
              "properties": {
                "daylight": {
                  "description": "Indicates if sensor gets daylight",
                  "type": "boolean"
                },
                "lastupdated": {
                  "description": "Last update date of the sensor",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "swversion": {
              "description": "This parameter uniquely identifies the software version running in the hardware.",
              "type": "string"
            },
            "type": {
              "description": "Type name of the sensor",
              "type": "string"
            }
          },
          "readOnly": true,
          "title": "Sensor Information",
          "type": "object",
          "writeOnly": false
        }
      },
      "security": [
        "basic_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "in": "header",
          "scheme": "basic"
        }
      },
      "title": "DaylightSensor",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en"
        }
      ],
      "actions": {
        "setState": {
          "description": "Allows the user to turn the light on and off, modify the hue and effects",
          "forms": [
            {
              "contentType": "application/json",
              "href": "state",
              "htv:methodName": "PUT",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "input": {
            "properties": {
              "alert": {
                "description": "The alert effect, which is a temporary change to the bulb’s state.'l' of lselect stands for loop. Presence of lselect ignores transitiontime",
                "enum": [
                  "lselect",
                  "none",
                  "select"
                ],
                "type": "string"
              },
              "bri": {
                "description": "Brightness level. Values higher than 254 are taken as 254",
                "maximum": 254,
                "minimum": 0,
                "type": "integer"
              },
              "bri_inc": {
                "description": "Increments or decrements the value of the brightness.  bri_inc is ignored if the bri attribute is provided.",
                "maximum": 254,
                "minimum": -254,
                "type": "integer"
              },
              "ct": {
                "description": "The Mired color temperature of the light. 2012 connected lights are capable of 153 (6500K) to 500 (2000K).",
                "maximum": 500,
                "minimum": 153,
                "type": "integer"
              },
              "ct_inc": {
                "description": "Increments or decrements the value of the ct. ct_inc is ignored if the ct attribute is provided. Any ongoing color transition is stopped. Setting a value of 0 also stops any ongoing transition. The bridge will return the ct value after the increment is performed.",
                "maximum": 65534,
                "minimum": -65534,
                "type": "integer"
              },
              "effect": {
                "description": "The dynamic effect of the light. Currently “none” and “colorloop” are supported. Other values will generate an error of type 7.Setting the effect to colorloop will cycle through all hues using the current brightness and saturation settings.",
                "enum": [
                  "none",
                  "colorloop"
                ],
                "type": "string"
              },
              "hue": {
                "description": "The hue value to set light to.The hue value is a wrapping value between 0 and 65535. Both 0 and 65535 are red, 25500 is green and 46920 is blue.",
                "maximum": 65535,
                "minimum": 0,
                "type": "integer"
              },
              "hue_inc": {
                "description": "Increments or decrements the value of the hue. hue_inc is ignored if the hue attribute is provided. Any ongoing color transition is stopped. Setting a value of 0 also stops any ongoing transition. The bridge will return the hue value after the increment is performed.Note if the resulting values are \u003c 0 or \u003e 65535 the result is wrapped. ",
                "maximum": 65534,
                "minimum": -65534,
                "type": "integer"
              },
              "on": {
                "description": "On/Off state of the light. On=true, Off=false",
                "type": "boolean"
              },
              "sat": {
                "description": "Saturation of the light. 254 is the most saturated (colored) and 0 is the least saturated (white).",
                "maximum": 254,
                "minimum": 0,
                "type": "integer"
              },
              "sat_inc": {
                "description": "Increments or decrements the value of the sat.  sat_inc is ignored if the sat attribute is provided. Any ongoing sat transition is stopped. Setting a value of 0 also stops any ongoing transition. The bridge will return the sat value after the increment is performed.",
                "maximum": 254,
                "minimum": -254,
                "type": "integer"
              },
              "transisiontime": {
                "description": "The duration of the transition from the light’s current state to the new state.",
                "maximum": 65535,
                "minimum": 0,
                "type": "integer",
                "unit": "100ms"
              },
              "xy": {
                "description": "The x and y coordinates of a color in CIE color space.The first entry is the x coordinate and the second entry is the y coordinate. Both x and y must be between 0 and 1. If the specified coordinates are not in the CIE color space, the closest color to the coordinates will be chosen.",
                "items": {
                  "maximum": 1,
                  "minimum": -1,
                  "type": "number"
                },
                "maxItems": 2,
                "minItems": 2,
                "type": "array"
              },
              "xy_inc": {
                "description": "TIncrements or decrements the value of the xy.  xy_inc is ignored if the xy attribute is provided. Any ongoing color transition is stopped. Setting a value of 0 also stops any ongoing transition. Will stop at it’s gamut boundaries. The bridge will return the xy value after the increment is performed. Max value [0.5, 0.5].",
                "items": {
                  "maximum": 0.5,
                  "minimum": -0.5,
                  "type": "number"
                },
                "maxItems": 2,
                "minItems": 2,
                "type": "array"
              }
            },
            "type": "object"
          },
          "output": {
            "items": {
              "properties": {
                "success": {
                  "oneOf": [
                    {
                      "properties": {
                        "/lights/1/state/on": {
                          "description": "Current state of the light after operation",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "/lights/1/state/bri": {
                          "description": "Current brightness level",
                          "maximum": 254,
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "/lights/1/state/alert": {
                          "description": "Already provided alert value",
                          "enum": [
                            "lselect",
                            "none",
                            "select"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "/lights/1/state/transisiontime": {
                          "description": "Already provided transitiontime",
                          "maximum": 65535,
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "/lights/1/state/hue": {
                          "description": "Current hue of the light after the operation",
                          "maximum": 65535,
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "/lights/1/state/sat": {
                          "description": "Current saturation of the light after the operation",
                          "maximum": 254,
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "/lights/1/state/xy": {
                          "description": "Current xy color of the light after the operation",
                          "items": {
                            "maximum": 1,
                            "minimum": -1,
                            "type": "number"
                          },
                          "maxItems": 2,
                          "minItems": 2,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "/lights/1/state/ct": {
                          "description": "Current ct color of the light after the operation",
                          "maximum": 500,
                          "minimum": 153,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "/lights/1/state/effect": {
                          "description": "Current running effect on the light after the operation",
                          "enum": [
                            "none",
                            "colorloop"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "/lights/1/state/ct": {
                          "description": "Current running effect on the light after the operation",
                          "enum": [
                            "none",
                            "colorloop"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "safe": false,
          "title": "Set State"
        }
      },
      "base": "https://esiremotelab.esi.ei.tum.de:8081/LabLocal/api/17AvYQeLM2T8Z3r0e3BiEvb9Qdwt36yU2BudTxrn/lights/1/",
      "created": "2020-12-18T12:44:01.452221837Z",
      "description": "This is a Philips Hue Color Light Bulb that can be controlled remotely. This is on the left of the desk 1",
      "id": "urn:dev:ops:32473-HueLight-1",
      "modified": "2020-12-18T12:44:01.452221837Z",
      "properties": {
        "lightInformation": {
          "description": "Gets the attributes and state of a given light. There are more attributes that are not listed here and are not of importance.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "",
              "htv:methodName": "GET",
              "op": "readproperty"
            }
          ],
          "properties": {
            "modelid": {
              "description": "The hardware model of the light.",
              "type": "string"
            },
            "name": {
              "description": "A unique, editable name given to the light",
              "type": "string"
            },
            "state": {
              "description": "Details the state of the light, see the state table below for more details.",
              "properties": {
                "alert": {
                  "description": "The alert effect, which is a temporary change to the bulb’s state.'l' of lselect stands for loop.",
                  "enum": [
                    "none",
                    "select",
                    "lselect"
                  ],
                  "type": "string"
                },
                "bri": {
                  "description": "brightness level",
                  "maximum": 254,
                  "minimum": 0,
                  "type": "integer"
                },
                "colormode": {
                  "enum": [
                    "xy",
                    "ct"
                  ],
                  "type": "string"
                },
                "ct": {
                  "description": "The Mired color temperature of the light. 2012 connected lights are capable of 153 (6500K) to 500 (2000K).",
                  "maximum": 500,
                  "minimum": 153,
                  "type": "integer"
                },
                "effect": {
                  "description": "The dynamic effect of the light. Currently “none” and “colorloop” are supported. Other values will generate an error of type 7.Setting the effect to colorloop will cycle through all hues using the current brightness and saturation settings.",
                  "enum": [
                    "none",
                    "colorloop"
                  ],
                  "type": "string"
                },
                "hue": {
                  "description": "The hue value to set light to.The hue value is a wrapping value between 0 and 65535. Both 0 and 65535 are red, 25500 is green and 46920 is blue.",
                  "maximum": 65535,
                  "minimum": 0,
                  "type": "integer"
                },
                "on": {
                  "description": "On/Off state of the light. On=true, Off=false",
                  "type": "boolean"
                },
                "reachable": {
                  "description": "Indicates if a light can be reached by the bridge",
                  "type": "boolean"
                },
                "sat": {
                  "description": "Saturation of the light. 254 is the most saturated (colored) and 0 is the least saturated (white).",
                  "maximum": 254,
                  "minimum": 0,
                  "type": "integer"
                },
                "xy": {
                  "description": "The x and y coordinates of a color in CIE color space.The first entry is the x coordinate and the second entry is the y coordinate. Both x and y must be between 0 and 1. If the specified coordinates are not in the CIE color space, the closest color to the coordinates will be chosen.",
                  "items": {
                    "maximum": 1,
                    "minimum": -1,
                    "type": "number"
                  },
                  "maxItems": 2,
                  "minItems": 2,
                  "type": "array"
                }
              },
              "readOnly": true,
              "title": "Light State",
              "type": "object"
            },
            "swversion": {
              "description": "An identifier for the software version running on the light",
              "type": "string"
            },
            "type": {
              "description": "A fixed name describing the type of light",
              "type": "string"
            }
          },
          "title": "State and Attributes Of Light",
          "type": "object"
        }
      },
      "security": [
        "basic_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "in": "header",
          "scheme": "basic"
        }
      },
      "title": "Hue Color Lamp 1",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en"
        }
      ],
      "actions": {
        "setState": {
          "description": "Allows the user to turn the light on and off, modify the hue and effects",
          "forms": [
            {
              "contentType": "application/json",
              "href": "state",
              "htv:methodName": "PUT",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "input": {
            "properties": {
              "alert": {
                "description": "The alert effect, which is a temporary change to the bulb’s state.'l' of lselect stands for loop. Presence of lselect ignores transitiontime",
                "enum": [
                  "lselect",
                  "none",
                  "select"
                ],
                "type": "string"
              },
              "bri": {
                "description": "Brightness level. Values higher than 254 are taken as 254",
                "maximum": 254,
                "minimum": 0,
                "type": "integer"
              },
              "bri_inc": {
                "description": "Increments or decrements the value of the brightness.  bri_inc is ignored if the bri attribute is provided.",
                "maximum": 254,
                "minimum": -254,
                "type": "integer"
              },
              "ct": {
                "description": "The Mired color temperature of the light. 2012 connected lights are capable of 153 (6500K) to 500 (2000K).",
                "maximum": 500,
                "minimum": 153,
                "type": "integer"
              },
              "ct_inc": {
                "description": "Increments or decrements the value of the ct. ct_inc is ignored if the ct attribute is provided. Any ongoing color transition is stopped. Setting a value of 0 also stops any ongoing transition. The bridge will return the ct value after the increment is performed.",
                "maximum": 65534,
                "minimum": -65534,
                "type": "integer"
              },
              "effect": {
                "description": "The dynamic effect of the light. Currently “none” and “colorloop” are supported. Other values will generate an error of type 7.Setting the effect to colorloop will cycle through all hues using the current brightness and saturation settings.",
                "enum": [
                  "none",
                  "colorloop"
                ],
                "type": "string"
              },
              "hue": {
                "description": "The hue value to set light to.The hue value is a wrapping value between 0 and 65535. Both 0 and 65535 are red, 25500 is green and 46920 is blue.",
                "maximum": 65535,
                "minimum": 0,
                "type": "integer"
              },
              "hue_inc": {
                "description": "Increments or decrements the value of the hue. hue_inc is ignored if the hue attribute is provided. Any ongoing color transition is stopped. Setting a value of 0 also stops any ongoing transition. The bridge will return the hue value after the increment is performed.Note if the resulting values are \u003c 0 or \u003e 65535 the result is wrapped. ",
                "maximum": 65534,
                "minimum": -65534,
                "type": "integer"
              },
              "on": {
                "description": "On/Off state of the light. On=true, Off=false",
                "type": "boolean"
              },
              "sat": {
                "description": "Saturation of the light. 254 is the most saturated (colored) and 0 is the least saturated (white).",
                "maximum": 254,
                "minimum": 0,
                "type": "integer"
              },
              "sat_inc": {
                "description": "Increments or decrements the value of the sat.  sat_inc is ignored if the sat attribute is provided. Any ongoing sat transition is stopped. Setting a value of 0 also stops any ongoing transition. The bridge will return the sat value after the increment is performed.",
                "maximum": 254,
                "minimum": -254,
                "type": "integer"
              },
              "transisiontime": {
                "description": "The duration of the transition from the light’s current state to the new state.",
                "maximum": 65535,
                "minimum": 0,
                "type": "integer",
                "unit": "100ms"
              },
              "xy": {
                "description": "The x and y coordinates of a color in CIE color space.The first entry is the x coordinate and the second entry is the y coordinate. Both x and y must be between 0 and 1. If the specified coordinates are not in the CIE color space, the closest color to the coordinates will be chosen.",
                "items": {
                  "maximum": 1,
                  "minimum": -1,
                  "type": "number"
                },
                "maxItems": 2,
                "minItems": 2,
                "type": "array"
              },
              "xy_inc": {
                "description": "TIncrements or decrements the value of the xy.  xy_inc is ignored if the xy attribute is provided. Any ongoing color transition is stopped. Setting a value of 0 also stops any ongoing transition. Will stop at it’s gamut boundaries. The bridge will return the xy value after the increment is performed. Max value [0.5, 0.5].",
                "items": {
                  "maximum": 0.5,
                  "minimum": -0.5,
                  "type": "number"
                },
                "maxItems": 2,
                "minItems": 2,
                "type": "array"
              }
            },
            "type": "object"
          },
          "output": {
            "items": {
              "properties": {
                "success": {
                  "oneOf": [
                    {
                      "properties": {
                        "/lights/1/state/on": {
                          "description": "Current state of the light after operation",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "/lights/1/state/bri": {
                          "description": "Current brightness level",
                          "maximum": 254,
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "/lights/1/state/alert": {
                          "description": "Already provided alert value",
                          "enum": [
                            "lselect",
                            "none",
                            "select"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "/lights/1/state/transisiontime": {
                          "description": "Already provided transitiontime",
                          "maximum": 65535,
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "/lights/1/state/hue": {
                          "description": "Current hue of the light after the operation",
                          "maximum": 65535,
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "/lights/1/state/sat": {
                          "description": "Current saturation of the light after the operation",
                          "maximum": 254,
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "/lights/1/state/xy": {
                          "description": "Current xy color of the light after the operation",
                          "items": {
                            "maximum": 1,
                            "minimum": -1,
                            "type": "number"
                          },
                          "maxItems": 2,
                          "minItems": 2,
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "/lights/1/state/ct": {
                          "description": "Current ct color of the light after the operation",
                          "maximum": 500,
                          "minimum": 153,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "/lights/1/state/effect": {
                          "description": "Current running effect on the light after the operation",
                          "enum": [
                            "none",
                            "colorloop"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "/lights/1/state/ct": {
                          "description": "Current running effect on the light after the operation",
                          "enum": [
                            "none",
                            "colorloop"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "safe": false,
          "title": "Set State"
        }
      },
      "base": "https://esiremotelab.esi.ei.tum.de:8081/LabLocal/api/17AvYQeLM2T8Z3r0e3BiEvb9Qdwt36yU2BudTxrn/lights/2/",
      "created": "2020-12-18T12:43:59.524165527Z",
      "description": "This is a Philips Hue Color Light Bulb that can be controlled remotely. This is on the right of the desk 1",
      "id": "urn:dev:ops:32473-HueLight-2",
      "modified": "2020-12-18T12:43:59.524165527Z",
      "properties": {
        "lightInformation": {
          "description": "Gets the attributes and state of a given light. There are more attributes that are not listed here and are not of importance.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "",
              "htv:methodName": "GET",
              "op": "readproperty"
            }
          ],
          "properties": {
            "modelid": {
              "description": "The hardware model of the light.",
              "type": "string"
            },
            "name": {
              "description": "A unique, editable name given to the light",
              "type": "string"
            },
            "state": {
              "description": "Details the state of the light, see the state table below for more details.",
              "properties": {
                "alert": {
                  "description": "The alert effect, which is a temporary change to the bulb’s state.'l' of lselect stands for loop.",
                  "enum": [
                    "none",
                    "select",
                    "lselect"
                  ],
                  "type": "string"
                },
                "bri": {
                  "description": "brightness level",
                  "maximum": 254,
                  "minimum": 0,
                  "type": "integer"
                },
                "colormode": {
                  "enum": [
                    "xy",
                    "ct"
                  ],
                  "type": "string"
                },
                "ct": {
                  "description": "The Mired color temperature of the light. 2012 connected lights are capable of 153 (6500K) to 500 (2000K).",
                  "maximum": 500,
                  "minimum": 153,
                  "type": "integer"
                },
                "effect": {
                  "description": "The dynamic effect of the light. Currently “none” and “colorloop” are supported. Other values will generate an error of type 7.Setting the effect to colorloop will cycle through all hues using the current brightness and saturation settings.",
                  "enum": [
                    "none",
                    "colorloop"
                  ],
                  "type": "string"
                },
                "hue": {
                  "description": "The hue value to set light to.The hue value is a wrapping value between 0 and 65535. Both 0 and 65535 are red, 25500 is green and 46920 is blue.",
                  "maximum": 65535,
                  "minimum": 0,
                  "type": "integer"
                },
                "on": {
                  "description": "On/Off state of the light. On=true, Off=false",
                  "type": "boolean"
                },
                "reachable": {
                  "description": "Indicates if a light can be reached by the bridge",
                  "type": "boolean"
                },
                "sat": {
                  "description": "Saturation of the light. 254 is the most saturated (colored) and 0 is the least saturated (white).",
                  "maximum": 254,
                  "minimum": 0,
                  "type": "integer"
                },
                "xy": {
                  "description": "The x and y coordinates of a color in CIE color space.The first entry is the x coordinate and the second entry is the y coordinate. Both x and y must be between 0 and 1. If the specified coordinates are not in the CIE color space, the closest color to the coordinates will be chosen.",
                  "items": {
                    "maximum": 1,
                    "minimum": -1,
                    "type": "number"
                  },
                  "maxItems": 2,
                  "minItems": 2,
                  "type": "array"
                }
              },
              "readOnly": true,
              "title": "Light State",
              "type": "object"
            },
            "swversion": {
              "description": "An identifier for the software version running on the light",
              "type": "string"
            },
            "type": {
              "description": "A fixed name describing the type of light",
              "type": "string"
            }
          },
          "title": "State and Attributes Of Light",
          "type": "object"
        }
      },
      "security": [
        "basic_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "in": "header",
          "scheme": "basic"
        }
      },
      "title": "Hue Color Lamp 2",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en"
        }
      ],
      "base": "https://esiremotelab.esi.ei.tum.de:8081/LabLocal/api/17AvYQeLM2T8Z3r0e3BiEvb9Qdwt36yU2BudTxrn/",
      "created": "2020-12-18T12:44:01.839242912Z",
      "description": "A controller to switch off and on the lights or to dim them",
      "id": "urn:dev:ops:32473-HueSwitch-1234",
      "modified": "2020-12-18T12:44:01.839242912Z",
      "properties": {
        "switchInformation": {
          "description": "Switch information",
          "forms": [
            {
              "contentType": "application/json",
              "href": "sensors/7",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            }
          ],
          "properties": {
            "config": {
              "properties": {
                "battery": {
                  "maximum": 100,
                  "type": "integer"
                },
                "on": {
                  "type": "boolean"
                },
                "reachable": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "manufacturername": {
              "type": "string"
            },
            "modelid": {
              "const": "RWL021",
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "state": {
              "description": "When the switch last pressed and what button was pressed and how it was pressed",
              "properties": {
                "buttonevent": {
                  "description": "*2 means short release, *3 means long release. 1* is the turn on button, 2* is the brighten button, 3* is the dim button, 4* is the turn off button",
                  "enum": [
                    1002,
                    1003,
                    2002,
                    2003,
                    3002,
                    3003,
                    4002,
                    4003
                  ],
                  "type": "integer"
                },
                "lastupdated": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "swversion": {
              "type": "string"
            },
            "type": {
              "const": "ZLLSwitch",
              "type": "string"
            },
            "uniqueid": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "security": [
        "basic_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "in": "header",
          "scheme": "basic"
        }
      },
      "title": "Hue Dimmer Switch",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en"
        }
      ],
      "@type": "",
      "created": "2020-12-18T12:44:08.804078642Z",
      "description": "Infrared sensor for the detection of objects",
      "events": {
        "detectedObject": {
          "data": {
            "type": "boolean"
          },
          "description": "Detects the rising edge of the signal of the infrared sensor.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/InfraredSensor1/events/detectedObject",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            }
          ],
          "title": "Object detected"
        }
      },
      "forms": [
        {
          "contentType": "application/json",
          "href": "https://esiremotelab.esi.ei.tum.de:8081/InfraredSensor1/all/properties",
          "op": [
            "writeallproperties",
            "writemultipleproperties"
          ]
        }
      ],
      "id": "urn:dev:ops:32473-InfraredSensor-001",
      "modified": "2020-12-18T12:44:08.804078642Z",
      "properties": {
        "objectPresence": {
          "description": "Reads the infrared sensor; 0: no object in front; 1: object in front.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/InfraredSensor1/properties/objectPresence",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/InfraredSensor1/properties/objectPresence/observable",
              "op": [
                "observeproperty"
              ],
              "subprotocol": "longpoll"
            }
          ],
          "observable": true,
          "readOnly": false,
          "title": "Read infrared sensor",
          "type": "boolean",
          "writeOnly": false
        }
      },
      "security": "basic_sc",
      "securityDefinitions": {
        "basic_sc": {
          "in": "header",
          "scheme": "basic"
        }
      },
      "title": "InfraredSensor1",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en"
        }
      ],
      "@type": "",
      "created": "2020-12-18T12:44:05.703681145Z",
      "description": "Infrared sensor for the detection of objects",
      "events": {
        "detectedObject": {
          "data": {
            "type": "boolean"
          },
          "description": "Detects the rising edge of the signal of the infrared sensor.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/InfraredSensor2/events/detectedObject",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            }
          ],
          "title": "Object detected"
        }
      },
      "forms": [
        {
          "contentType": "application/json",
          "href": "https://esiremotelab.esi.ei.tum.de:8081/InfraredSensor2/all/properties",
          "op": [
            "writeallproperties",
            "writemultipleproperties"
          ]
        }
      ],
      "id": "urn:dev:ops:32473-InfraredSensor-002",
      "modified": "2020-12-18T12:44:05.703681145Z",
      "properties": {
        "objectPresence": {
          "description": "Reads the infrared sensor; 0: no object in front; 1: object in front.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/InfraredSensor2/properties/objectPresence",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/InfraredSensor2/properties/objectPresence/observable",
              "op": [
                "observeproperty"
              ],
              "subprotocol": "longpoll"
            }
          ],
          "observable": true,
          "readOnly": false,
          "title": "Read infrared sensor",
          "type": "boolean",
          "writeOnly": false
        }
      },
      "security": "basic_sc",
      "securityDefinitions": {
        "basic_sc": {
          "in": "header",
          "scheme": "basic"
        }
      },
      "title": "InfraredSensor2",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en"
        }
      ],
      "@type": "",
      "actions": {
        "fillColor": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/UnicornPHAT2/actions/fillColor",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "input": {
            "oneOf": [
              {
                "description": "fully saturated one color as string",
                "enum": [
                  "red",
                  "green",
                  "blue"
                ],
                "type": "string"
              },
              {
                "description": "[r,g,b] input",
                "items": {
                  "maximum": 255,
                  "minimum": 0,
                  "type": "integer"
                },
                "maxItems": 3,
                "minItems": 3,
                "type": "array"
              }
            ]
          },
          "safe": false
        },
        "fillRandom": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/UnicornPHAT2/actions/fillRandom",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "safe": false
        }
      },
      "created": "2020-12-18T12:44:01.07192343Z",
      "description": "LED matrix",
      "forms": [
        {
          "contentType": "application/json",
          "href": "https://esiremotelab.esi.ei.tum.de:8081/UnicornPHAT2/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties",
            "writeallproperties",
            "writemultipleproperties"
          ]
        }
      ],
      "id": "urn:dev:ops:32473-UnicornpHAT-001",
      "modified": "2020-12-18T12:44:09.975419376Z",
      "properties": {
        "pixels": {
          "description": "Array of pixels with their RGB colors",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/UnicornPHAT2/properties/pixels",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/UnicornPHAT2/properties/pixels/observable",
              "op": [
                "observeproperty"
              ],
              "subprotocol": "longpoll"
            }
          ],
          "items": {
            "type": "integer"
          },
          "maxItems": 32,
          "minItems": 32,
          "observable": true,
          "readOnly": false,
          "title": "pixels",
          "type": "array",
          "writeOnly": false
        }
      },
      "security": "basic_sc",
      "securityDefinitions": {
        "basic_sc": {
          "in": "header",
          "scheme": "basic"
        }
      },
      "title": "UnicornPHAT2",
      "ttl": 86400
    },
    {
      "@context": "https://www.w3.org/2019/wot/td/v1",
      "actions": {
        "action": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://192.168.30.133:8888/action",
              "op": "invokeaction"
            }
          ],
          "idempotent": true,
          "safe": true
        },
        "alert": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://192.168.30.133:8888/alert",
              "op": "invokeaction"
            }
          ],
          "idempotent": true,
          "safe": true
        },
        "closedCaption": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://192.168.30.133:8888/closedCaption",
              "op": "invokeaction"
            }
          ],
          "idempotent": true,
          "safe": true
        },
        "matchDescription": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://192.168.30.133:8888/matchDescription",
              "op": "invokeaction"
            }
          ],
          "idempotent": true,
          "safe": true
        },
        "notification": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://192.168.30.133:8888/notification",
              "op": "invokeaction"
            }
          ],
          "idempotent": true,
          "safe": true
        }
      },
      "created": "2020-12-18T12:44:29.004483851Z",
      "id": "urn:dev:ops:32473-WoTPhone2-1234",
      "modified": "2020-12-18T12:44:29.004483851Z",
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "title": "MyPhoneThing3",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en"
        }
      ],
      "@type": "",
      "actions": {
        "clearDisplay": {
          "description": "Clears the seven segment displays",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT1/actions/clearDisplay",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "safe": false
        },
        "clearLEDs": {
          "description": "Turns off the 7 LEDs",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT1/actions/clearLEDs",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "safe": false
        },
        "makeRainbow": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT1/actions/makeRainbow",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "safe": false
        },
        "writeDisplay": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT1/actions/writeDisplay",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "input": {
            "description": "A string from left to right on the seven segment display. Capitals look better",
            "maxLength": 4,
            "type": "string"
          },
          "safe": false
        }
      },
      "created": "2020-12-18T12:44:04.160381618Z",
      "description": "HAT with seven segment displays, temperature and pressure sensors, touch buttons and LEDs",
      "events": {
        "buttonA": {
          "data": {
            "type": "boolean"
          },
          "description": "Press (true) or release(false) of a button. An LED also lights up on the HAT",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT1/events/buttonA",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            }
          ]
        },
        "buttonB": {
          "data": {
            "type": "boolean"
          },
          "description": "Press (true) or release(false) of a button. An LED also lights up on the HAT",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT1/events/buttonB",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            }
          ]
        },
        "buttonC": {
          "data": {
            "type": "boolean"
          },
          "description": "Press (true) or release(false) of a button. An LED also lights up on the HAT",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT1/events/buttonC",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            }
          ]
        }
      },
      "forms": [
        {
          "contentType": "application/json",
          "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT1/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties",
            "writeallproperties",
            "writemultipleproperties"
          ]
        }
      ],
      "id": "urn:dev:ops:32473-rainbowhat-001",
      "modified": "2020-12-18T12:44:04.160381618Z",
      "properties": {
        "leds": {
          "additionalProperties": {
            "properties": {
              "brightness": {
                "maximum": 15,
                "minimum": 0,
                "type": "integer"
              },
              "colour": {
                "items": {
                  "maximum": 255,
                  "minimum": 0,
                  "type": "integer"
                },
                "maxItems": 3,
                "minItems": 3,
                "type": "array"
              }
            },
            "required": [
              "brightness",
              "colour"
            ],
            "type": "object"
          },
          "description": "7 LEDs with their RGB colors. 0 corresponds to the rightmost LED. They can be individually set",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT1/properties/leds",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            }
          ],
          "observable": false,
          "propertyNames": {
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6"
            ],
            "type": "string"
          },
          "readOnly": false,
          "title": "LEDs",
          "type": "object",
          "writeOnly": false
        },
        "pressure": {
          "description": "Pressure in hPa",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT1/properties/pressure",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT1/properties/pressure/observable",
              "op": [
                "observeproperty"
              ],
              "subprotocol": "longpoll"
            }
          ],
          "observable": true,
          "readOnly": true,
          "title": "pressure",
          "type": "number",
          "unit": "hPa",
          "writeOnly": false
        },
        "temperature": {
          "description": "Temperature in Celcius",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT1/properties/temperature",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT1/properties/temperature/observable",
              "op": [
                "observeproperty"
              ],
              "subprotocol": "longpoll"
            }
          ],
          "observable": true,
          "readOnly": true,
          "title": "temperature",
          "type": "number",
          "unit": "C",
          "writeOnly": false
        }
      },
      "security": "basic_sc",
      "securityDefinitions": {
        "basic_sc": {
          "in": "header",
          "scheme": "basic"
        }
      },
      "title": "RainbowHAT1",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en"
        }
      ],
      "@type": "",
      "actions": {
        "clearDisplay": {
          "description": "Clears the seven segment displays",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT2/actions/clearDisplay",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "safe": false
        },
        "clearLEDs": {
          "description": "Turns off the 7 LEDs",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT2/actions/clearLEDs",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "safe": false
        },
        "makeRainbow": {
          "description": "Changes the colors of the LEDs to the official Rainbow colors!",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT2/actions/makeRainbow",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "safe": false
        },
        "writeDisplay": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT2/actions/writeDisplay",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "input": {
            "description": "A string from left to right on the seven segment display. Capitals look better",
            "maxLength": 4,
            "type": "string"
          },
          "safe": false
        }
      },
      "created": "2020-12-18T12:44:05.319173644Z",
      "description": "HAT with seven segment displays, temperature and pressure sensors, touch buttons and LEDs",
      "events": {
        "buttonA": {
          "data": {
            "type": "boolean"
          },
          "description": "Press (true) or release(false) of a button. An LED also lights up on the HAT",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT2/events/buttonA",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            }
          ]
        },
        "buttonB": {
          "data": {
            "type": "boolean"
          },
          "description": "Press (true) or release(false) of a button. An LED also lights up on the HAT",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT2/events/buttonB",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            }
          ]
        },
        "buttonC": {
          "data": {
            "type": "boolean"
          },
          "description": "Press (true) or release(false) of a button. An LED also lights up on the HAT",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT2/events/buttonC",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            }
          ]
        }
      },
      "forms": [
        {
          "contentType": "application/json",
          "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT2/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties",
            "writeallproperties",
            "writemultipleproperties"
          ]
        }
      ],
      "id": "urn:dev:ops:32473-rainbowhat-002",
      "modified": "2020-12-18T12:44:05.319173644Z",
      "properties": {
        "leds": {
          "additionalProperties": {
            "properties": {
              "brightness": {
                "maximum": 15,
                "minimum": 0,
                "type": "integer"
              },
              "colour": {
                "items": {
                  "maximum": 255,
                  "minimum": 0,
                  "type": "integer"
                },
                "maxItems": 3,
                "minItems": 3,
                "type": "array"
              }
            },
            "required": [
              "brightness",
              "colour"
            ],
            "type": "object"
          },
          "description": "7 LEDs with their RGB colors. 0 corresponds to the rightmost LED. They can be individually set",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT2/properties/leds",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            }
          ],
          "observable": false,
          "propertyNames": {
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6"
            ],
            "type": "string"
          },
          "readOnly": false,
          "title": "LEDs",
          "type": "object",
          "writeOnly": false
        },
        "pressure": {
          "description": "Pressure in hPa",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT2/properties/pressure",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT2/properties/pressure/observable",
              "op": [
                "observeproperty"
              ],
              "subprotocol": "longpoll"
            }
          ],
          "observable": true,
          "readOnly": true,
          "title": "pressure",
          "type": "number",
          "unit": "hPa",
          "writeOnly": false
        },
        "temperature": {
          "description": "Temperature in Celcius",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT2/properties/temperature",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/RainbowHAT2/properties/temperature/observable",
              "op": [
                "observeproperty"
              ],
              "subprotocol": "longpoll"
            }
          ],
          "observable": true,
          "readOnly": true,
          "title": "temperature",
          "type": "number",
          "unit": "C",
          "writeOnly": false
        }
      },
      "security": "basic_sc",
      "securityDefinitions": {
        "basic_sc": {
          "in": "header",
          "scheme": "basic"
        }
      },
      "title": "RainbowHAT2",
      "ttl": 86400
    },
    {
      "@context": "https://www.w3.org/2019/wot/td/v1",
      "created": "2020-06-12T08:35:44.897112128Z",
      "id": "urn:example:1234",
      "modified": "2020-06-12T14:38:57.411137834Z",
      "properties": {
        "status": {
          "forms": [
            {
              "contentType": "text/html",
              "href": "https://example.com/status",
              "op": [
                "readproperty"
              ]
            }
          ]
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "title": "ExampleSensor"
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Motion",
        "iot:MotionControl",
        "iot:Sensor"
      ],
      "created": "2020-12-18T12:44:22.029998676Z",
      "id": "urn:uuid:0800f07a-178d-48ec-9ddf-d8a941071298",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:22.029998676Z",
      "properties": {
        "motion": {
          "@type": [
            "Occupancy",
            "iot:MotionDetected"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/motion0?di=0800f07a-178d-48ec-9ddf-d8a941071298",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/motion0?di=0800f07a-178d-48ec-9ddf-d8a941071298",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/motion0?di=0800f07a-178d-48ec-9ddf-d8a941071298",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/motion0?di=0800f07a-178d-48ec-9ddf-d8a941071298",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/motion0?di=0800f07a-178d-48ec-9ddf-d8a941071298",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/motion0?di=0800f07a-178d-48ec-9ddf-d8a941071298",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/motion0?di=0800f07a-178d-48ec-9ddf-d8a941071298",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/motion0?di=0800f07a-178d-48ec-9ddf-d8a941071298",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/motion0?di=0800f07a-178d-48ec-9ddf-d8a941071298",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/motion0?di=0800f07a-178d-48ec-9ddf-d8a941071298",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "type": "boolean"
            }
          },
          "readOnly": true,
          "required": [
            "value"
          ],
          "title": "Motion Sense Status",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-motion0",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Temperature",
        "iot:TemperatureSensing",
        "iot:Sensor"
      ],
      "created": "2020-12-18T12:44:19.716950485Z",
      "id": "urn:uuid:086d490d-90c6-4785-a677-c911bd2af919",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:19.716950485Z",
      "properties": {
        "temperature": {
          "@type": [
            "MultiLevelState",
            "iot:Temperature"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/temperature1?di=086d490d-90c6-4785-a677-c911bd2af919",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/temperature1?di=086d490d-90c6-4785-a677-c911bd2af919",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/temperature1?di=086d490d-90c6-4785-a677-c911bd2af919",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/temperature1?di=086d490d-90c6-4785-a677-c911bd2af919",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/temperature1?di=086d490d-90c6-4785-a677-c911bd2af919",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/temperature1?di=086d490d-90c6-4785-a677-c911bd2af919",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/temperature1?di=086d490d-90c6-4785-a677-c911bd2af919",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/temperature1?di=086d490d-90c6-4785-a677-c911bd2af919",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/temperature1?di=086d490d-90c6-4785-a677-c911bd2af919",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/temperature1?di=086d490d-90c6-4785-a677-c911bd2af919",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:TemperatureData"
              ],
              "type": "number"
            }
          },
          "readOnly": true,
          "required": [
            "value"
          ],
          "title": "Room Temperature",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-temperature1",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "sosa": "http://www.w3.org/ns/sosa/"
        },
        {
          "@language": "en"
        }
      ],
      "@type": [
        "Thing"
      ],
      "actions": {
        "startSprinkler": {
          "description": "Run sprinkler for a set time; stops automatically",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/Sprinkler3/actions/startSprinkler",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/Sprinkler3/actions/startSprinkler",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "input": {
            "properties": {
              "timeout": {
                "minimum": 1,
                "type": "number"
              }
            },
            "type": "object"
          },
          "safe": false
        },
        "stopSprinkler": {
          "description": "stop sprinkler immediately",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/Sprinkler3/actions/stopSprinkler",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/Sprinkler3/actions/stopSprinkler",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "safe": false
        }
      },
      "created": "2020-12-18T12:44:14.993671588Z",
      "forms": [
        {
          "contentType": "application/json",
          "href": "http://arces143100.arces.unibo.it:8080/Sprinkler3/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties"
          ]
        }
      ],
      "id": "urn:uuid:0e2d6022-9da9-4341-accd-5e9a6c9262b3",
      "links": [
        {
          "href": "http://arces143100.arces.unibo.it/assets/farm/sprinkler.obj",
          "rel": "model"
        }
      ],
      "modified": "2020-12-18T12:44:14.993671588Z",
      "position": {
        "x": 21.438358306884766,
        "y": 15.320684432983398,
        "z": 8.61369514465332
      },
      "properties": {
        "status": {
          "enum": [
            "on",
            "off"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/Sprinkler3/properties/status",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/Sprinkler3/properties/status",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": true,
          "type": "string",
          "writeOnly": false
        }
      },
      "security": "no_sec",
      "securityDefinitions": {
        "no_sec": {
          "scheme": "nosec"
        }
      },
      "title": "Sprinkler3",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "sosa": "https://opengeospatial.github.io/ELFIE/json-ld/sosa.jsonld"
        },
        {
          "ssn": "https://raw.githubusercontent.com/oeg-upm/ssn-resource-center/master/json-ld/ssnContextV2.json"
        },
        {
          "qudt": "http://www.qudt.org/qudt/owl/1.0.0/quantity/"
        },
        {
          "xsd": "http://www.w3.org/2001/XMLSchema"
        },
        {
          "san": "https://www.irit.fr/recherches/MELODI/ontologies/SAN.owl"
        },
        {
          "@language": "en"
        }
      ],
      "@id": "urn:dev:serial:DA00AW2N",
      "@sensorAddress": "2",
      "@sensorType": "control",
      "@serialNumber": "DA00AW2N",
      "@type": [
        "sosa:Sensor",
        "Thing"
      ],
      "actions": {
        "SelfTest": {
          "description": "Test sensor voltage",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-2-control/actions/SelfTest",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "safe": false
        }
      },
      "created": "2020-12-18T12:44:11.902405856Z",
      "description": "Cluster Head test thing",
      "events": {
        "AccelerationThresholdReached": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-2-control/events/AccelerationThresholdReached",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            }
          ]
        },
        "GyroscopeThresholdReached": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-2-control/events/GyroscopeThresholdReached",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            }
          ]
        }
      },
      "forms": [
        {
          "contentType": "application/json",
          "href": "http://example.it/DA00AW2N-2-control/all/properties",
          "op": [
            "writeallproperties",
            "writemultipleproperties"
          ]
        }
      ],
      "id": "urn:uuid:2aec4e3f-d9b8-4100-a5fb-4ac527cd159e",
      "links": [
        {
          "href": "./DA00AW2N-2-control",
          "rel": "san:isController"
        },
        {
          "href": "https://api.jsonbin.io/b/5f6afc2b7243cd7e8241dc6b",
          "rel": "sosa:isHostedBy",
          "type": "application/ld+json"
        }
      ],
      "modified": "2020-12-18T12:44:11.902405856Z",
      "properties": {
        "AccelerationThreshold": {
          "description": "Set a threshold for ThresholdReached event",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-2-control/properties/AccelerationThreshold",
              "htv:methodName": "PUT",
              "op": [
                "writeproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": false,
          "type": "number",
          "value": 1000,
          "writeOnly": true
        },
        "GravityScale": {
          "description": "Set a gravivity scale used to output data samples",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-2-control/properties/GravityScale",
              "htv:methodName": "PUT",
              "op": [
                "writeproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": false,
          "type": "number",
          "value": 2,
          "writeOnly": true
        },
        "GyroscopeScale": {
          "description": "Set a gyroscope scale used to output data samples",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-2-control/properties/GyroscopeScale",
              "htv:methodName": "PUT",
              "op": [
                "writeproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": false,
          "type": "number",
          "value": 125,
          "writeOnly": true
        },
        "GyroscopeThreshold": {
          "description": "Set a threshold for ThresholdReached event",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-2-control/properties/GyroscopeThreshold",
              "htv:methodName": "PUT",
              "op": [
                "writeproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": false,
          "type": "number",
          "value": 1000,
          "writeOnly": true
        }
      },
      "security": [
        "basic_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "in": "header",
          "scheme": "basic"
        }
      },
      "support": "https://site.unibo.it/mac4pro/it/persone",
      "title": "DA00AW2N-2-control",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "sosa": "http://www.w3.org/ns/sosa/"
        },
        {
          "@language": "en"
        }
      ],
      "@type": "sosa:Sensor",
      "created": "2020-12-18T12:44:14.214120744Z",
      "description": "A soil sensor",
      "events": {
        "tooDry": {
          "data": {
            "type": "number",
            "unit": "Celsius"
          },
          "description": "Informs if the soil is too try",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/SoilSensor2/events/tooDry",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "ws://arces143100.arces.unibo.it:8080/SoilSensor2/events/tooDry",
              "op": "subscribeevent"
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/SoilSensor2/events/tooDry",
              "op": "subscribeevent"
            }
          ]
        }
      },
      "forms": [
        {
          "contentType": "application/json",
          "href": "http://arces143100.arces.unibo.it:8080/SoilSensor2/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties"
          ]
        }
      ],
      "id": "urn:uuid:2f5296db-d226-46d9-b2bd-c9c16c9508d7",
      "links": [
        {
          "href": "http://arces143100.arces.unibo.it/assets/farm/soilsensor.obj",
          "rel": "model"
        }
      ],
      "modified": "2020-12-18T12:44:14.214120744Z",
      "position": {
        "x": 23.68010711669922,
        "y": -18.3692684173584,
        "z": 9.918664932250977
      },
      "properties": {
        "moisture": {
          "description": "Soil water content in %",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/SoilSensor2/properties/moisture",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/SoilSensor2/properties/moisture",
              "op": [
                "readproperty"
              ]
            }
          ],
          "maximum": 100,
          "minimum": 0,
          "observable": false,
          "readOnly": true,
          "type": "number",
          "writeOnly": false
        },
        "temperature": {
          "description": "Soil Temperature",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/SoilSensor2/properties/temperature",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/SoilSensor2/properties/temperature",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": true,
          "type": "number",
          "unit": "Celsius",
          "writeOnly": false
        }
      },
      "security": [
        "no_sc"
      ],
      "securityDefinitions": {
        "no_sc": {
          "scheme": "nosec"
        }
      },
      "title": "SoilSensor2",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Meter",
        "iot:IlluminanceSensing",
        "iot:Sensor"
      ],
      "created": "2020-12-18T12:44:23.967911042Z",
      "id": "urn:uuid:3255959d-741c-4b2b-81c2-42a4caa2223e",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:23.967911042Z",
      "properties": {
        "illuminance": {
          "@type": [
            "MultiLevelState",
            "iot:Illuminance"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/illuminance0?di=3255959d-741c-4b2b-81c2-42a4caa2223e",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/illuminance0?di=3255959d-741c-4b2b-81c2-42a4caa2223e",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/illuminance0?di=3255959d-741c-4b2b-81c2-42a4caa2223e",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/illuminance0?di=3255959d-741c-4b2b-81c2-42a4caa2223e",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/illuminance0?di=3255959d-741c-4b2b-81c2-42a4caa2223e",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/illuminance0?di=3255959d-741c-4b2b-81c2-42a4caa2223e",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/illuminance0?di=3255959d-741c-4b2b-81c2-42a4caa2223e",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/illuminance0?di=3255959d-741c-4b2b-81c2-42a4caa2223e",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/illuminance0?di=3255959d-741c-4b2b-81c2-42a4caa2223e",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/illuminance0?di=3255959d-741c-4b2b-81c2-42a4caa2223e",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:IlluminanceData"
              ],
              "type": "number"
            }
          },
          "readOnly": true,
          "required": [
            "value"
          ],
          "title": "Illuminance",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-illuminance0",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Light",
        "iot:LightControl",
        "iot:Actuator",
        "iot:BinarySwitch"
      ],
      "actions": {
        "off": {
          "@type": [
            "TurnOff",
            "iot:TurnOff"
          ],
          "description": "Set light status to off (minimum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": false,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn Off",
          "type": "object"
        },
        "on": {
          "@type": [
            "TurnOn",
            "iot:TurnOn"
          ],
          "description": "Set light status to on (maximum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": true,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn On",
          "type": "object"
        }
      },
      "created": "2020-12-18T12:44:24.350311952Z",
      "id": "urn:uuid:336db92b-45f6-496b-997c-e196ba7b49fd",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:24.350311952Z",
      "properties": {
        "status": {
          "@type": [
            "OnOffState",
            "iot:SwitchStatus"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1mosfet?di=336db92b-45f6-496b-997c-e196ba7b49fd",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "On/Off Status",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-led1mosfet",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "sosa": "http://www.w3.org/ns/sosa/"
        },
        {
          "@language": "en"
        }
      ],
      "@type": "sosa:Sensor",
      "created": "2020-12-18T12:44:13.444619566Z",
      "description": "A soil sensor",
      "events": {
        "tooDry": {
          "data": {
            "type": "number",
            "unit": "Celsius"
          },
          "description": "Informs if the soil is too try",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/SoilSensor3/events/tooDry",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "ws://arces143100.arces.unibo.it:8080/SoilSensor3/events/tooDry",
              "op": "subscribeevent"
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/SoilSensor3/events/tooDry",
              "op": "subscribeevent"
            }
          ]
        }
      },
      "forms": [
        {
          "contentType": "application/json",
          "href": "http://arces143100.arces.unibo.it:8080/SoilSensor3/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties"
          ]
        }
      ],
      "id": "urn:uuid:345a4a59-0826-4ab5-b1bc-d37634763706",
      "links": [
        {
          "href": "http://arces143100.arces.unibo.it/assets/farm/soilsensor.obj",
          "rel": "model"
        }
      ],
      "modified": "2020-12-18T12:44:13.444619566Z",
      "position": {
        "x": 21.9825382232666,
        "y": 0.530631959438324,
        "z": 9.677474021911621
      },
      "properties": {
        "moisture": {
          "description": "Soil water content in %",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/SoilSensor3/properties/moisture",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/SoilSensor3/properties/moisture",
              "op": [
                "readproperty"
              ]
            }
          ],
          "maximum": 100,
          "minimum": 0,
          "observable": false,
          "readOnly": true,
          "type": "number",
          "writeOnly": false
        },
        "temperature": {
          "description": "Soil Temperature",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/SoilSensor3/properties/temperature",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/SoilSensor3/properties/temperature",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": true,
          "type": "number",
          "unit": "Celsius",
          "writeOnly": false
        }
      },
      "security": [
        "no_sc"
      ],
      "securityDefinitions": {
        "no_sc": {
          "scheme": "nosec"
        }
      },
      "title": "SoilSensor3",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "cap": "https://onedm.org/exploratory/cap/",
          "iot": "http://iotschema.org/",
          "s": "http://schema.org"
        }
      ],
      "@type": [
        "Thing",
        "Switch",
        "iot:Sensor",
        "iot:BinarySwitch",
        "cap:#/sdfObject/Switch"
      ],
      "created": "2020-12-18T12:44:18.946178594Z",
      "id": "urn:uuid:3932ae08-31b4-4882-b299-5d488ec8775c",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:18.946178594Z",
      "properties": {
        "status": {
          "@type": [
            "OnOffState",
            "iot:SwitchStatus",
            "cap:#/sdfObject/Switch/sdfProperty/State"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/button1touch?di=3932ae08-31b4-4882-b299-5d488ec8775c",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/button1touch?di=3932ae08-31b4-4882-b299-5d488ec8775c",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/button1touch?di=3932ae08-31b4-4882-b299-5d488ec8775c",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/button1touch?di=3932ae08-31b4-4882-b299-5d488ec8775c",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/button1touch?di=3932ae08-31b4-4882-b299-5d488ec8775c",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/button1touch?di=3932ae08-31b4-4882-b299-5d488ec8775c",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/button1touch?di=3932ae08-31b4-4882-b299-5d488ec8775c",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/button1touch?di=3932ae08-31b4-4882-b299-5d488ec8775c",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/button1touch?di=3932ae08-31b4-4882-b299-5d488ec8775c",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/button1touch?di=3932ae08-31b4-4882-b299-5d488ec8775c",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:Toggle"
              ],
              "type": "boolean"
            }
          },
          "readOnly": true,
          "required": [
            "value"
          ],
          "title": "On/Off Status",
          "type": "object"
        }
      },
      "s:elevation": "238.049",
      "s:latitude": "-68.3193975",
      "s:longitude": "47.3816744",
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-button1touch",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Light",
        "iot:LightControl",
        "iot:Actuator",
        "iot:BinarySwitch"
      ],
      "actions": {
        "off": {
          "@type": [
            "TurnOff",
            "iot:TurnOff"
          ],
          "description": "Set light status to off (minimum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": false,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn Off",
          "type": "object"
        },
        "on": {
          "@type": [
            "TurnOn",
            "iot:TurnOn"
          ],
          "description": "Set light status to on (maximum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": true,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn On",
          "type": "object"
        }
      },
      "created": "2020-12-18T12:44:20.10667736Z",
      "id": "urn:uuid:397a9167-88bc-4b52-844a-dade5b772c30",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:20.10667736Z",
      "properties": {
        "status": {
          "@type": [
            "OnOffState",
            "iot:SwitchStatus"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0blue?di=397a9167-88bc-4b52-844a-dade5b772c30",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "On/Off Status",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-led0blue",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "sosa": "http://www.w3.org/ns/sosa/"
        },
        {
          "@language": "en"
        }
      ],
      "@type": "sosa:Sensor",
      "created": "2020-12-18T12:44:12.28997665Z",
      "description": "A soil sensor",
      "events": {
        "tooDry": {
          "data": {
            "type": "number",
            "unit": "Celsius"
          },
          "description": "Informs if the soil is too try",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/SoilSensor1/events/tooDry",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "ws://arces143100.arces.unibo.it:8080/SoilSensor1/events/tooDry",
              "op": "subscribeevent"
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/SoilSensor1/events/tooDry",
              "op": "subscribeevent"
            }
          ]
        }
      },
      "forms": [
        {
          "contentType": "application/json",
          "href": "http://arces143100.arces.unibo.it:8080/SoilSensor1/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties"
          ]
        }
      ],
      "id": "urn:uuid:3b0e8dfb-56de-4c16-89ec-4c751d0d0ba3",
      "links": [
        {
          "href": "http://arces143100.arces.unibo.it/assets/farm/soilsensor.obj",
          "rel": "model"
        }
      ],
      "modified": "2020-12-18T12:44:12.28997665Z",
      "position": {
        "x": 6.703963279724121,
        "y": -9.44587516784668,
        "z": 9.677474021911621
      },
      "properties": {
        "moisture": {
          "description": "Soil water content in %",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/SoilSensor1/properties/moisture",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/SoilSensor1/properties/moisture",
              "op": [
                "readproperty"
              ]
            }
          ],
          "maximum": 100,
          "minimum": 0,
          "observable": false,
          "readOnly": true,
          "type": "number",
          "writeOnly": false
        },
        "temperature": {
          "description": "Soil Temperature",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/SoilSensor1/properties/temperature",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/SoilSensor1/properties/temperature",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": true,
          "type": "number",
          "unit": "Celsius",
          "writeOnly": false
        }
      },
      "security": [
        "no_sc"
      ],
      "securityDefinitions": {
        "no_sc": {
          "scheme": "nosec"
        }
      },
      "title": "SoilSensor1",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Light",
        "iot:LightControl",
        "iot:Actuator",
        "iot:BinarySwitch"
      ],
      "actions": {
        "off": {
          "@type": [
            "TurnOff",
            "iot:TurnOff"
          ],
          "description": "Set light status to off (minimum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": false,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn Off",
          "type": "object"
        },
        "on": {
          "@type": [
            "TurnOn",
            "iot:TurnOn"
          ],
          "description": "Set light status to on (maximum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": true,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn On",
          "type": "object"
        }
      },
      "created": "2020-12-18T12:44:22.420822891Z",
      "id": "urn:uuid:3ee85e44-7a56-4f0e-a8b8-b250c868e513",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:22.420822891Z",
      "properties": {
        "status": {
          "@type": [
            "OnOffState",
            "iot:SwitchStatus"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2mosfet?di=3ee85e44-7a56-4f0e-a8b8-b250c868e513",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "On/Off Status",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-led2mosfet",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "sosa": "http://www.w3.org/ns/sosa/"
        },
        {
          "@language": "en"
        }
      ],
      "@type": "sosa:Sensor",
      "created": "2020-12-18T12:44:13.830978173Z",
      "description": "A soil sensor",
      "events": {
        "tooDry": {
          "data": {
            "type": "number",
            "unit": "Celsius"
          },
          "description": "Informs if the soil is too try",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/SoilSensor4/events/tooDry",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "ws://arces143100.arces.unibo.it:8080/SoilSensor4/events/tooDry",
              "op": "subscribeevent"
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/SoilSensor4/events/tooDry",
              "op": "subscribeevent"
            }
          ]
        }
      },
      "forms": [
        {
          "contentType": "application/json",
          "href": "http://arces143100.arces.unibo.it:8080/SoilSensor4/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties"
          ]
        }
      ],
      "id": "urn:uuid:3f1aa62b-8db2-4471-921c-d5fe0d444bb4",
      "links": [
        {
          "href": "http://arces143100.arces.unibo.it/assets/farm/soilsensor.obj",
          "rel": "model"
        }
      ],
      "modified": "2020-12-18T12:44:13.830978173Z",
      "position": {
        "x": 17.785709381103516,
        "y": 5.388306617736816,
        "z": 9.360590934753418
      },
      "properties": {
        "moisture": {
          "description": "Soil water content in %",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/SoilSensor4/properties/moisture",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/SoilSensor4/properties/moisture",
              "op": [
                "readproperty"
              ]
            }
          ],
          "maximum": 100,
          "minimum": 0,
          "observable": false,
          "readOnly": true,
          "type": "number",
          "writeOnly": false
        },
        "temperature": {
          "description": "Soil Temperature",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/SoilSensor4/properties/temperature",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/SoilSensor4/properties/temperature",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": true,
          "type": "number",
          "unit": "Celsius",
          "writeOnly": false
        }
      },
      "security": [
        "no_sc"
      ],
      "securityDefinitions": {
        "no_sc": {
          "scheme": "nosec"
        }
      },
      "title": "SoilSensor4",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "cov": "http://www.example.org/coap-binding#"
        },
        {
          "saref": "https://w3id.org/saref#"
        }
      ],
      "@type": [
        "saref:LightSwitch"
      ],
      "created": "2020-12-18T12:44:29.391091923Z",
      "description": "English description",
      "descriptions": {
        "de": "Deutsche Beschreibung"
      },
      "id": "urn:uuid:3fc5a02f-c630-45c7-9b23-f2c20167916e",
      "modified": "2020-12-18T12:44:29.391091923Z",
      "properties": {
        "echo": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "/echo",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false
        }
      },
      "security": [
        "basic_schema"
      ],
      "securityDefinitions": {
        "basic_schema": {
          "description": "Basic sec schema",
          "descriptions": {
            
          },
          "in": "query",
          "name": "querykey",
          "scheme": "basic"
        }
      },
      "title": "English title",
      "titles": {
        "de": "Deutscher Titel"
      },
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "sosa": "http://www.w3.org/ns/sosa/"
        },
        {
          "@language": "en"
        }
      ],
      "@type": "sosa:Sensor",
      "created": "2020-12-18T12:44:12.678848137Z",
      "description": "A soil sensor",
      "events": {
        "tooDry": {
          "data": {
            "type": "number",
            "unit": "Celsius"
          },
          "description": "Informs if the soil is too try",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/SoilSensor0/events/tooDry",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "ws://arces143100.arces.unibo.it:8080/SoilSensor0/events/tooDry",
              "op": "subscribeevent"
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/SoilSensor0/events/tooDry",
              "op": "subscribeevent"
            }
          ]
        }
      },
      "forms": [
        {
          "contentType": "application/json",
          "href": "http://arces143100.arces.unibo.it:8080/SoilSensor0/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties"
          ]
        }
      ],
      "id": "urn:uuid:40eb8f3e-0120-4635-acc8-bae336b58ced",
      "links": [
        {
          "href": "http://arces143100.arces.unibo.it/assets/farm/soilsensor.obj",
          "rel": "model"
        }
      ],
      "modified": "2020-12-18T12:44:12.678848137Z",
      "position": {
        "x": 11.703963279724121,
        "y": -19.781078338623047,
        "z": 9.677474021911621
      },
      "properties": {
        "moisture": {
          "description": "Soil water content in %",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/SoilSensor0/properties/moisture",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/SoilSensor0/properties/moisture",
              "op": [
                "readproperty"
              ]
            }
          ],
          "maximum": 100,
          "minimum": 0,
          "observable": false,
          "readOnly": true,
          "type": "number",
          "writeOnly": false
        },
        "temperature": {
          "description": "Soil Temperature",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/SoilSensor0/properties/temperature",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/SoilSensor0/properties/temperature",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": true,
          "type": "number",
          "unit": "Celsius",
          "writeOnly": false
        }
      },
      "security": [
        "no_sc"
      ],
      "securityDefinitions": {
        "no_sc": {
          "scheme": "nosec"
        }
      },
      "title": "SoilSensor0",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing"
      ],
      "actions": {
        "say": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://jv.local:8090/api/say",
              "op": "invokeaction"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8096/api/say",
              "op": "invokeaction",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8097/api/say",
              "op": "invokeaction",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8096/api/say",
              "op": "invokeaction",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8097/api/say",
              "op": "invokeaction",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "input": {
            "type": "string"
          }
        }
      },
      "created": "2020-12-18T12:44:16.147513919Z",
      "description": "A simple text to speech service",
      "id": "urn:uuid:4458dc73-b30e-5aba-ba71-f17a5f050203",
      "links": [
        {
          "href": "https://github.com/mmccool/web-speak",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:16.147513919Z",
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-WebSpeak-jv",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Switch",
        "iot:Sensor",
        "iot:BinarySwitch"
      ],
      "created": "2020-12-18T12:44:23.194735615Z",
      "id": "urn:uuid:4b74842c-8bfe-4f14-8bc5-31b4c79658a4",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:23.194735615Z",
      "properties": {
        "status": {
          "@type": [
            "OnOffState",
            "iot:SwitchStatus"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/toggle0?di=4b74842c-8bfe-4f14-8bc5-31b4c79658a4",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/toggle0?di=4b74842c-8bfe-4f14-8bc5-31b4c79658a4",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/toggle0?di=4b74842c-8bfe-4f14-8bc5-31b4c79658a4",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/toggle0?di=4b74842c-8bfe-4f14-8bc5-31b4c79658a4",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/toggle0?di=4b74842c-8bfe-4f14-8bc5-31b4c79658a4",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/toggle0?di=4b74842c-8bfe-4f14-8bc5-31b4c79658a4",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/toggle0?di=4b74842c-8bfe-4f14-8bc5-31b4c79658a4",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/toggle0?di=4b74842c-8bfe-4f14-8bc5-31b4c79658a4",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/toggle0?di=4b74842c-8bfe-4f14-8bc5-31b4c79658a4",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/toggle0?di=4b74842c-8bfe-4f14-8bc5-31b4c79658a4",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:Toggle"
              ],
              "type": "boolean"
            }
          },
          "readOnly": true,
          "required": [
            "value"
          ],
          "title": "On/Off Status",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-toggle0",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Light",
        "iot:LightControl",
        "iot:Actuator",
        "iot:BinarySwitch"
      ],
      "actions": {
        "off": {
          "@type": [
            "TurnOff",
            "iot:TurnOff"
          ],
          "description": "Set light status to off (minimum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": false,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn Off",
          "type": "object"
        },
        "on": {
          "@type": [
            "TurnOn",
            "iot:TurnOn"
          ],
          "description": "Set light status to on (maximum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": true,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn On",
          "type": "object"
        }
      },
      "created": "2020-12-18T12:44:19.3314533Z",
      "id": "urn:uuid:5081db06-f405-4ecf-bcdd-2424bf5af1ca",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:19.3314533Z",
      "properties": {
        "status": {
          "@type": [
            "OnOffState",
            "iot:SwitchStatus"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1relay?di=5081db06-f405-4ecf-bcdd-2424bf5af1ca",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "On/Off Status",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-led1relay",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en"
        }
      ],
      "@type": "Thing",
      "actions": {
        "makeDrink": {
          "description": "Make a drink from available list of beverages. Accepts drink id, size and quantity as uriVariables.\nBrews one medium americano if no uriVariables are specified.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/smart-coffee-machine/actions/makeDrink{?drinkId,size,quantity}",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/smart-coffee-machine/actions/makeDrink",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "output": {
            "description": "Returns true/false and a message when all invoked promises are resolved (asynchronous).",
            "properties": {
              "message": {
                "type": "string"
              },
              "result": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "safe": false,
          "uriVariables": {
            "drinkId": {
              "description": "Defines what drink to make, drinkId is one of possibleDrinks property values, e.g. latte.",
              "type": "string"
            },
            "quantity": {
              "description": "Defines how many drinks to make, ranging from 1 to 5.",
              "maximum": 5,
              "minimum": 1,
              "type": "integer"
            },
            "size": {
              "description": "Defines the size of a drink, s = small, m = medium, l = large.",
              "enum": [
                "s",
                "m",
                "l"
              ],
              "type": "string"
            }
          }
        },
        "setSchedule": {
          "description": "Add a scheduled task to the schedules property. Accepts drink id, size, quantity, time and mode as body of a request.\nAssumes one medium americano if not specified, but time and mode are mandatory fields.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/smart-coffee-machine/actions/setSchedule",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/smart-coffee-machine/actions/setSchedule",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "input": {
            "properties": {
              "drinkId": {
                "description": "Defines what drink to make, drinkId is one of possibleDrinks property values, e.g. latte.",
                "type": "string"
              },
              "mode": {
                "description": "Defines the mode of the scheduled task, e.g. once or everyday. All the possible values are given in the enum field of this Thing Description.",
                "enum": [
                  "once",
                  "everyday",
                  "everyMo",
                  "everyTu",
                  "everyWe",
                  "everyTh",
                  "everyFr",
                  "everySat",
                  "everySun"
                ],
                "type": "string"
              },
              "quantity": {
                "description": "Defines how many drinks to make, ranging from 1 to 5.",
                "maximum": 5,
                "minimum": 1,
                "type": "integer"
              },
              "size": {
                "description": "Defines the size of a drink, s = small, m = medium, l = large.",
                "enum": [
                  "s",
                  "m",
                  "l"
                ],
                "type": "string"
              },
              "time": {
                "description": "Defines the time of the scheduled task in 24h format, e.g. 10:00 or 21:00.",
                "type": "string"
              }
            },
            "required": [
              "time",
              "mode"
            ],
            "type": "object"
          },
          "output": {
            "description": "Returns true/false and a message when all invoked promises are resolved (asynchronous).",
            "properties": {
              "message": {
                "type": "string"
              },
              "result": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "safe": false
        }
      },
      "created": "2020-12-18T12:44:27.844363591Z",
      "description": "A smart coffee machine with a range of capabilities.\nA complementary tutorial is available at http://www.thingweb.io/smart-coffee-machine.html.",
      "events": {
        "outOfResource": {
          "data": {
            "type": "string"
          },
          "description": "Out of resource event. Emitted when the available resource level is not sufficient for a desired drink.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/smart-coffee-machine/events/outOfResource",
              "op": [
                "subscribeevent",
                "unsubscribeevent"
              ],
              "subprotocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "ws://plugfest.thingweb.io:8083/smart-coffee-machine/events/outOfResource",
              "op": "subscribeevent"
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/smart-coffee-machine/events/outOfResource",
              "op": [
                "subscribeevent",
                "unsubscribeevent"
              ]
            }
          ]
        }
      },
      "forms": [
        {
          "contentType": "application/json",
          "href": "http://plugfest.thingweb.io:8083/smart-coffee-machine/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties",
            "writeallproperties",
            "writemultipleproperties"
          ]
        }
      ],
      "id": "urn:uuid:55f01138-5c96-4b3d-a5d0-81319a2db677",
      "modified": "2020-12-18T12:44:27.844363591Z",
      "properties": {
        "allAvailableResources": {
          "description": "Current level of all available resources given as an integer percentage for each particular resource.\nThe data is obtained from the machine's sensors but can be set manually via the availableResourceLevel property in case the sensors are broken.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/smart-coffee-machine/properties/allAvailableResources",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/smart-coffee-machine/properties/allAvailableResources",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "properties": {
            "chocolate": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer"
            },
            "coffeeBeans": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer"
            },
            "milk": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer"
            },
            "water": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer"
            }
          },
          "readOnly": true,
          "type": "object",
          "writeOnly": false
        },
        "availableResourceLevel": {
          "description": "Current level of a particular resource. Requires resource id variable as uriVariables.\nThe property can also be overridden, which also requires resource id as uriVariables.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/smart-coffee-machine/properties/availableResourceLevel{?id}",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/smart-coffee-machine/properties/availableResourceLevel",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": false,
          "type": "number",
          "uriVariables": {
            "id": {
              "enum": [
                "water",
                "milk",
                "chocolate",
                "coffeeBeans"
              ],
              "type": "string"
            }
          },
          "writeOnly": false
        },
        "maintenanceNeeded": {
          "description": "Shows whether a maintenance is needed. The property is observable. Automatically set to true when the servedCounter property exceeds 1000.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/smart-coffee-machine/properties/maintenanceNeeded",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/smart-coffee-machine/properties/maintenanceNeeded/observable",
              "op": [
                "observeproperty",
                "unobserveproperty"
              ],
              "subprotocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/smart-coffee-machine/properties/maintenanceNeeded",
              "op": [
                "readproperty",
                "writeproperty",
                "observeproperty",
                "unobserveproperty"
              ]
            }
          ],
          "observable": true,
          "readOnly": false,
          "type": "boolean",
          "writeOnly": false
        },
        "possibleDrinks": {
          "description": "The list of possible drinks in general. Doesn't depend on the available resources.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/smart-coffee-machine/properties/possibleDrinks",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/smart-coffee-machine/properties/possibleDrinks",
              "op": [
                "readproperty"
              ]
            }
          ],
          "items": {
            "type": "string"
          },
          "observable": false,
          "readOnly": true,
          "type": "array",
          "writeOnly": false
        },
        "schedules": {
          "description": "The list of scheduled tasks.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/smart-coffee-machine/properties/schedules",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/smart-coffee-machine/properties/schedules",
              "op": [
                "readproperty"
              ]
            }
          ],
          "items": {
            "properties": {
              "drinkId": {
                "description": "Defines what drink to make, drinkId is one of possibleDrinks property values, e.g. latte.",
                "type": "string"
              },
              "mode": {
                "description": "Defines the mode of the scheduled task, e.g. once or everyday. All the possible values are given in the enum field of this Thing Description.",
                "enum": [
                  "once",
                  "everyday",
                  "everyMo",
                  "everyTu",
                  "everyWe",
                  "everyTh",
                  "everyFr",
                  "everySat",
                  "everySun"
                ],
                "type": "string"
              },
              "quantity": {
                "description": "Defines how many drinks to make, ranging from 1 to 5.",
                "maximum": 5,
                "minimum": 1,
                "type": "integer"
              },
              "size": {
                "description": "Defines the size of a drink, s = small, m = medium, l = large.",
                "enum": [
                  "s",
                  "m",
                  "l"
                ],
                "type": "string"
              },
              "time": {
                "description": "Defines the time of the scheduled task in 24h format, e.g. 10:00 or 21:00.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "observable": false,
          "readOnly": true,
          "type": "array",
          "writeOnly": false
        },
        "servedCounter": {
          "description": "The total number of served beverages.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/smart-coffee-machine/properties/servedCounter",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/smart-coffee-machine/properties/servedCounter",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            }
          ],
          "minimum": 0,
          "observable": false,
          "readOnly": false,
          "type": "integer",
          "writeOnly": false
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "git://github.com/eclipse/thingweb.node-wot.git",
      "title": "Smart-Coffee-Machine",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "g": "https://www.w3.org/2019/wot/td/geo/v1",
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing"
      ],
      "actions": {
        "crop": {
          "description": "Extract and return a portion of the most recently grabbed image",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/frame/crop",
              "op": "invokeaction",
              "response": {
                "contentType": "image/jpeg"
              }
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/frame/crop",
              "op": "invokeaction",
              "response": {
                "contentType": "image/jpeg"
              },
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/frame/crop",
              "op": "invokeaction",
              "response": {
                "contentType": "image/jpeg"
              },
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/frame/crop",
              "op": "invokeaction",
              "response": {
                "contentType": "image/jpeg"
              },
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/frame/crop",
              "op": "invokeaction",
              "response": {
                "contentType": "image/jpeg"
              },
              "security": [
                "digest_sc"
              ]
            }
          ],
          "idempotent": false,
          "input": {
            "properties": {
              "x": {
                "minimum": 0,
                "title": "x size (pixels)",
                "type": "integer"
              },
              "xo": {
                "minimum": 0,
                "title": "x origin (pixels)",
                "type": "integer"
              },
              "y": {
                "minimum": 0,
                "title": "y size (pixels)",
                "type": "integer"
              },
              "yo": {
                "minimum": 0,
                "title": "y origin (pixels)",
                "type": "integer"
              }
            },
            "required": [
              "x",
              "y"
            ],
            "type": "object"
          },
          "safe": true,
          "title": "Crop"
        },
        "region": {
          "description": "Extract and return a portion of the most recently grabbed image.",
          "forms": [
            {
              "contentType": "image/jpeg",
              "href": "http://plus2.local:9190/api/frame/region{?xo,yo,x,y}",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "image/jpeg",
              "href": "https://tiktok.mmccool.org:8098/api/frame/region{?xo,yo,x,y}",
              "op": [
                "invokeaction"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "image/jpeg",
              "href": "https://tiktok.mmccool.org:8099/api/frame/region{?xo,yo,x,y}",
              "op": [
                "invokeaction"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "image/jpeg",
              "href": "https://portal.mmccool.net:8098/api/frame/region{?xo,yo,x,y}",
              "op": [
                "invokeaction"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "image/jpeg",
              "href": "https://portal.mmccool.net:8099/api/frame/region{?xo,yo,x,y}",
              "op": [
                "invokeaction"
              ],
              "security": [
                "digest_sc"
              ]
            }
          ],
          "idempotent": false,
          "safe": true,
          "title": "Region",
          "uriVariables": {
            "x": {
              "minimum": 0,
              "title": "x size (pixels)",
              "type": "integer"
            },
            "xo": {
              "minimum": 0,
              "title": "x origin (pixels)",
              "type": "integer"
            },
            "y": {
              "minimum": 0,
              "title": "y size (pixels)",
              "type": "integer"
            },
            "yo": {
              "minimum": 0,
              "title": "y origin (pixels)",
              "type": "integer"
            }
          }
        }
      },
      "created": "2020-12-18T12:44:16.629596965Z",
      "description": "A simple interface to V4L2 cameras",
      "id": "urn:uuid:57a9ebb4-f7c9-5828-bf8d-7c34fcff0c31",
      "links": [
        {
          "href": "https://github.com/mmccool/simple-webcam",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        },
        {
          "href": "https://intel-geolocator/properties/location",
          "rel": "g:geolocationOf"
        }
      ],
      "modified": "2020-12-18T12:44:16.629596965Z",
      "properties": {
        "backlight_compensation": {
          "@type": [
            "iot:CurrentLevel",
            "iot:LevelData"
          ],
          "description": "The current backlight compensation setting",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/backlight_compensation",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/backlight_compensation/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/backlight_compensation",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/backlight_compensation/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/backlight_compensation",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/backlight_compensation/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/backlight_compensation",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/backlight_compensation/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/backlight_compensation",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/backlight_compensation/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            }
          ],
          "maximum": 2,
          "minimum": 0,
          "observable": true,
          "readOnly": true,
          "title": "Backlight Compensation",
          "type": "integer"
        },
        "brightness": {
          "@type": [
            "iot:CurrentLevel",
            "iot:LevelData"
          ],
          "description": "The current brightness setting",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/brightness",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/brightness/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/brightness",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/brightness/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/brightness",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/brightness/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/brightness",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/brightness/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/brightness",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/brightness/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            }
          ],
          "maximum": 64,
          "minimum": -64,
          "observable": true,
          "readOnly": true,
          "title": "Brightness",
          "type": "integer"
        },
        "contrast": {
          "@type": [
            "iot:CurrentLevel",
            "iot:LevelData"
          ],
          "description": "The current contrast setting",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/contrast",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/contrast/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/contrast",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/contrast/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/contrast",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/contrast/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/contrast",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/contrast/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/contrast",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/contrast/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            }
          ],
          "maximum": 64,
          "minimum": 0,
          "observable": true,
          "readOnly": true,
          "title": "Contrast",
          "type": "integer"
        },
        "exposure": {
          "@type": [
            "iot:CurrentLevel",
            "iot:LevelData"
          ],
          "description": "The current absolute exposure setting",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/exposure",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/exposure/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/exposure",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/exposure/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/exposure",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/exposure/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/exposure",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/exposure/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/exposure",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/exposure/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            }
          ],
          "maximum": 5000,
          "minimum": 1,
          "observable": true,
          "readOnly": true,
          "title": "Exposure",
          "type": "integer"
        },
        "exposure_auto": {
          "@type": [
            "iot:BinarySwitch",
            "iot:StateData"
          ],
          "description": "Status of automatic exposure mode",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/exposure_auto",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/exposure_auto/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/exposure_auto",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/exposure_auto/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/exposure_auto",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/exposure_auto/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/exposure_auto",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/exposure_auto/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/exposure_auto",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/exposure_auto/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            }
          ],
          "observable": true,
          "readOnly": true,
          "title": "Exposure Auto Mode",
          "type": "boolean"
        },
        "exposure_auto_priority": {
          "@type": [
            "iot:BinarySwitch",
            "iot:StateData"
          ],
          "description": "Statue of automatic exposure priority",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/exposure_auto_priority",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/exposure_auto_priority/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/exposure_auto_priority",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/exposure_auto_priority/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/exposure_auto_priority",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/exposure_auto_priority/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/exposure_auto_priority",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/exposure_auto_priority/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/exposure_auto_priority",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/exposure_auto_priority/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            }
          ],
          "observable": true,
          "readOnly": true,
          "title": "Exposure Auto Priority",
          "type": "boolean"
        },
        "frame": {
          "forms": [
            {
              "contentType": "image/jpeg",
              "href": "http://plus2.local:9190/api/frame",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "image/jpeg",
              "href": "http://plus2.local:9190/api/frame/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "image/jpeg",
              "href": "https://tiktok.mmccool.org:8098/api/frame",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "image/jpeg",
              "href": "https://tiktok.mmccool.org:8098/api/frame/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "image/jpeg",
              "href": "https://tiktok.mmccool.org:8099/api/frame",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "image/jpeg",
              "href": "https://tiktok.mmccool.org:8099/api/frame/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "image/jpeg",
              "href": "https://portal.mmccool.net:8098/api/frame",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "image/jpeg",
              "href": "https://portal.mmccool.net:8098/api/frame/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "image/jpeg",
              "href": "https://portal.mmccool.net:8099/api/frame",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "image/jpeg",
              "href": "https://portal.mmccool.net:8099/api/frame/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            }
          ],
          "observable": true,
          "readOnly": true,
          "title": "frame"
        },
        "gamma": {
          "@type": [
            "iot:CurrentLevel",
            "iot:LevelData"
          ],
          "description": "The current gamma setting, x100",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/gamma",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/gamma/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/gamma",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/gamma/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/gamma",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/gamma/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            }
          ],
          "maximum": 500,
          "minimum": 16,
          "observable": true,
          "readOnly": true,
          "title": "Gamma",
          "type": "integer"
        },
        "hue": {
          "@type": [
            "iot:CurrentLevel",
            "iot:LevelData"
          ],
          "description": "The current hue setting",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/hue",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/hue/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/hue",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/hue/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/hue",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/hue/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            }
          ],
          "maximum": 40,
          "minimum": -40,
          "observable": true,
          "readOnly": true,
          "title": "Hue",
          "type": "integer"
        },
        "saturation": {
          "@type": [
            "iot:CurrentLevel",
            "iot:LevelData"
          ],
          "description": "The current saturation setting",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/saturation",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/saturation/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/saturation",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/saturation/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/saturation",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/saturation/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/saturation",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/saturation/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/saturation",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/saturation/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            }
          ],
          "maximum": 100,
          "minimum": 0,
          "observable": true,
          "readOnly": true,
          "title": "Saturation",
          "type": "integer"
        },
        "sharpness": {
          "description": "The current sharpness setting",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/sharpness",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/sharpness/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/sharpness",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/sharpness/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/sharpness",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/sharpness/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/sharpness",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/sharpness/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/sharpness",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/sharpness/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            }
          ],
          "maximum": 600,
          "minimum": 0,
          "observable": true,
          "readOnly": true,
          "title": "Sharpness",
          "type": "integer"
        },
        "white_balance": {
          "@type": [
            "iot:CurrentLevel",
            "iot:LevelData"
          ],
          "description": "The current white balance setting",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/white_balance",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/white_balance/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/white_balance",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/white_balance/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/white_balance",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/white_balance/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/white_balance",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/white_balance/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/white_balance",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/white_balance/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            }
          ],
          "maximum": 6500,
          "minimum": 2800,
          "observable": true,
          "readOnly": true,
          "title": "White Balance Temperature",
          "type": "integer"
        },
        "white_balance_auto": {
          "@type": [
            "iot:BinarySwitch",
            "iot:StateData"
          ],
          "description": "Status of automatic white balance mode",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/white_balance_auto",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "http://plus2.local:9190/api/white_balance_auto/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/white_balance_auto",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8098/api/white_balance_auto/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/white_balance_auto",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8099/api/white_balance_auto/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/white_balance_auto",
              "op": [
                "readproperty"
              ],
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8098/api/white_balance_auto/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "basic_sc"
              ],
              "subProtocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/white_balance_auto",
              "op": [
                "readproperty"
              ],
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8099/api/white_balance_auto/observe",
              "htv:methodName": "GET",
              "op": [
                "observeproperty"
              ],
              "security": [
                "digest_sc"
              ],
              "subProtocol": "longpoll"
            }
          ],
          "observable": true,
          "readOnly": true,
          "title": "White Balance Temperature Auto Mode",
          "type": "boolean"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "SimpleWebCamera-plus2.local-0",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Light",
        "iot:LightControl",
        "iot:Actuator",
        "iot:BinarySwitch"
      ],
      "actions": {
        "off": {
          "@type": [
            "TurnOff",
            "iot:TurnOff"
          ],
          "description": "Set light status to off (minimum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": false,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn Off",
          "type": "object"
        },
        "on": {
          "@type": [
            "TurnOn",
            "iot:TurnOn"
          ],
          "description": "Set light status to on (maximum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": true,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn On",
          "type": "object"
        }
      },
      "created": "2020-12-18T12:44:25.901815236Z",
      "id": "urn:uuid:594ee957-fd3e-4547-9430-5267bcdb3ed7",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:25.901815236Z",
      "properties": {
        "status": {
          "@type": [
            "OnOffState",
            "iot:SwitchStatus"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2side?di=594ee957-fd3e-4547-9430-5267bcdb3ed7",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "On/Off Status",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-led2side",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Motion",
        "iot:MotionControl",
        "iot:Sensor"
      ],
      "created": "2020-12-18T12:44:17.409667678Z",
      "id": "urn:uuid:5dc3f14e-4976-44d4-bfe8-57838db97ab5",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:17.409667678Z",
      "properties": {
        "motion": {
          "@type": [
            "Occupancy",
            "iot:MotionDetected"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/motion1?di=5dc3f14e-4976-44d4-bfe8-57838db97ab5",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/motion1?di=5dc3f14e-4976-44d4-bfe8-57838db97ab5",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/motion1?di=5dc3f14e-4976-44d4-bfe8-57838db97ab5",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/motion1?di=5dc3f14e-4976-44d4-bfe8-57838db97ab5",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/motion1?di=5dc3f14e-4976-44d4-bfe8-57838db97ab5",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/motion1?di=5dc3f14e-4976-44d4-bfe8-57838db97ab5",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/motion1?di=5dc3f14e-4976-44d4-bfe8-57838db97ab5",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/motion1?di=5dc3f14e-4976-44d4-bfe8-57838db97ab5",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/motion1?di=5dc3f14e-4976-44d4-bfe8-57838db97ab5",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/motion1?di=5dc3f14e-4976-44d4-bfe8-57838db97ab5",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "type": "boolean"
            }
          },
          "readOnly": true,
          "required": [
            "value"
          ],
          "title": "Motion Sense Status",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-motion1",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Light",
        "iot:LightControl",
        "iot:Actuator",
        "iot:BinarySwitch"
      ],
      "actions": {
        "off": {
          "@type": [
            "TurnOff",
            "iot:TurnOff"
          ],
          "description": "Set light status to off (minimum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": false,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn Off",
          "type": "object"
        },
        "on": {
          "@type": [
            "TurnOn",
            "iot:TurnOn"
          ],
          "description": "Set light status to on (maximum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": true,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn On",
          "type": "object"
        }
      },
      "created": "2020-12-18T12:44:20.491363164Z",
      "id": "urn:uuid:6573313c-da1e-4068-beb1-884b0c4c3c5d",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:20.491363164Z",
      "properties": {
        "status": {
          "@type": [
            "OnOffState",
            "iot:SwitchStatus"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0green?di=6573313c-da1e-4068-beb1-884b0c4c3c5d",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "On/Off Status",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-led0green",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en",
          "iot": "http://iotschema.org/",
          "mmccool": "http://mmccool.org/testvocab"
        }
      ],
      "@type": [
        "Thing"
      ],
      "actions": {
        "objid": {
          "description": "Detect, identify, and localize objects in an image",
          "descriptions": {
            "jp": "画像内のオブジェクトを検出、識別、および位置特定する"
          },
          "forms": [
            {
              "contentType": "image/jpeg",
              "href": "http://upsq3.local:9199/api/detect",
              "op": "invokeaction",
              "response": {
                "contentType": "application/json"
              }
            },
            {
              "contentType": "image/jpeg",
              "href": "https://tiktok.mmccool.org:8100/api/detect",
              "op": "invokeaction",
              "response": {
                "contentType": "application/json"
              },
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "image/jpeg",
              "href": "https://tiktok.mmccool.org:8101/api/detect",
              "op": "invokeaction",
              "response": {
                "contentType": "application/json"
              },
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "image/jpeg",
              "href": "https://portal.mmccool.net:8100/api/detect",
              "op": "invokeaction",
              "response": {
                "contentType": "application/json"
              },
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "image/jpeg",
              "href": "https://portal.mmccool.net:8101/api/detect",
              "op": "invokeaction",
              "response": {
                "contentType": "application/json"
              },
              "security": [
                "digest_sc"
              ]
            }
          ],
          "idempotent": true,
          "output": {
            "items": {
              "description": "Array of identified object names, scores, and location",
              "descriptions": {
                "jp": "識別されたオブジェクト名、スコア、および場所の配列"
              },
              "maxItems": 32,
              "minItems": 0,
              "properties": {
                "class": {
                  "description": "Class name of object identified",
                  "descriptions": {
                    "jp": "識別されたオブジェクトのクラス名"
                  },
                  "title": "Class",
                  "titles": {
                    "jp": "クラス"
                  },
                  "type": "string"
                },
                "region": {
                  "oneOf": [
                    {
                      "description": "Region described by upper-left corner and size",
                      "descriptions": {
                        "jp": ""
                      },
                      "properties": {
                        "x": {
                          "description": "Horizontal size of region in pixels",
                          "descriptions": {
                            "jp": "ピクセル単位での領域の水平方向のサイズ"
                          },
                          "minimum": 0,
                          "title": "width in pixels",
                          "titles": {
                            "jp": "ピクセル単位の幅"
                          },
                          "type": "integer"
                        },
                        "xo": {
                          "description": "Horizontal origin of ROI in pixels measured from the left",
                          "descriptions": {
                            "jp": "左から測った領域の水平方向の原点（ピクセル単位）"
                          },
                          "minimum": 0,
                          "title": "x origin (pixels)",
                          "titles": {
                            "jp": "x原点（ピクセル）"
                          },
                          "type": "integer"
                        },
                        "y": {
                          "description": "Vertical size of region in pixels",
                          "descriptions": {
                            "jp": "ピクセル単位での領域の垂直方向のサイズ"
                          },
                          "minimum": 0,
                          "title": "height in pixels",
                          "titles": {
                            "jp": "ピクセル単位の高さ"
                          },
                          "type": "integer"
                        },
                        "yo": {
                          "description": "Vertical origin of region in pixels measured from the top",
                          "descriptions": {
                            "jp": "上から測ったピクセル単位での領域の垂直方向の原点"
                          },
                          "minimum": 0,
                          "title": "y origin (pixels)",
                          "titles": {
                            "jp": "y原点（ピクセル）"
                          },
                          "type": "integer"
                        }
                      },
                      "required": [
                        "xo",
                        "yo",
                        "x",
                        "y"
                      ],
                      "title": "rectangular region",
                      "titles": {
                        "jp": ""
                      },
                      "type": "object"
                    },
                    {
                      "description": "Region described by upper-left corner and size",
                      "descriptions": {
                        "jp": ""
                      },
                      "properties": {
                        "r": {
                          "description": "Radial size of circular region in pixels",
                          "descriptions": {
                            "jp": "円形領域の半径サイズ（ピクセル単位）"
                          },
                          "minimum": 0,
                          "title": "radius in pixels",
                          "titles": {
                            "jp": "ピクセル単位の半径"
                          },
                          "type": "integer"
                        },
                        "xo": {
                          "description": "Horizontal origin of ROI in pixels measured from the left",
                          "descriptions": {
                            "jp": "左から測った領域の水平方向の原点（ピクセル単位）"
                          },
                          "minimum": 0,
                          "title": "x origin (pixels)",
                          "titles": {
                            "jp": "x原点（ピクセル）"
                          },
                          "type": "integer"
                        },
                        "yo": {
                          "description": "Vertical origin of region in pixels measured from the top",
                          "descriptions": {
                            "jp": "上から測ったピクセル単位での領域の垂直方向の原点"
                          },
                          "minimum": 0,
                          "title": "y origin (pixels)",
                          "titles": {
                            "jp": "y原点（ピクセル）"
                          },
                          "type": "integer"
                        }
                      },
                      "required": [
                        "xo",
                        "yo",
                        "radius"
                      ],
                      "title": "circular region",
                      "titles": {
                        "jp": ""
                      },
                      "type": "object"
                    },
                    {
                      "description": "Classification result only, no localization",
                      "descriptions": {
                        "jp": "分類結果のみ、ローカリゼーションなし"
                      },
                      "title": "no region",
                      "titles": {
                        "jp": "地域なし"
                      },
                      "type": "null"
                    }
                  ]
                },
                "score": {
                  "description": "Classification score from 0 to 1",
                  "descriptions": {
                    "jp": "分類スコア0から1"
                  },
                  "maximum": 1,
                  "minimum": 0,
                  "title": "Score",
                  "titles": {
                    "jp": "分類スコア"
                  },
                  "type": "number"
                }
              },
              "required": [
                "class"
              ],
              "title": "Objects",
              "titles": {
                "jp": "オブジェクト配列"
              },
              "type": "object"
            },
            "type": "array"
          },
          "safe": true,
          "title": "Object identification",
          "titles": {
            "jp": "オブジェクト識別"
          },
          "uriVariables": {
            "region": {
              "enum": [
                "rect",
                "circ",
                "none"
              ],
              "type": "string"
            }
          }
        }
      },
      "created": "2020-12-18T12:44:15.764909988Z",
      "description": "A neural network inference service",
      "descriptions": {
        "jp": "ニューラルネットワーク推論サービス"
      },
      "id": "urn:uuid:6f6d4d0b-3d8b-58a1-a90b-7d05680553d7",
      "links": [
        {
          "href": "https://github.com/mmccool/inference-service",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:15.764909988Z",
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "@type": [
            "mccool:basic"
          ],
          "description": "Basic authentication",
          "descriptions": {
            "jp": "基本認証"
          },
          "in": "header",
          "name": "Basic",
          "scheme": "basic"
        },
        "digest_sc": {
          "@type": [
            "mccool:digest"
          ],
          "description": "Digest authentication",
          "descriptions": {
            "jp": "ダイジェスト認証"
          },
          "in": "header",
          "name": "Digest",
          "qop": "auth-int",
          "scheme": "digest"
        },
        "nosec_sc": {
          "@type": [
            "mccool:nosec"
          ],
          "description": "No security",
          "descriptions": {
            "jp": "セキュリティなし"
          },
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Inference upsq3.local-0",
      "titles": {
        "jp": "推論 upsq3.local-0"
      },
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Light",
        "iot:LightControl",
        "iot:Actuator",
        "iot:BinarySwitch"
      ],
      "actions": {
        "off": {
          "@type": [
            "TurnOff",
            "iot:TurnOff"
          ],
          "description": "Set light status to off (minimum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": false,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn Off",
          "type": "object"
        },
        "on": {
          "@type": [
            "TurnOn",
            "iot:TurnOn"
          ],
          "description": "Set light status to on (maximum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": true,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn On",
          "type": "object"
        }
      },
      "created": "2020-12-18T12:44:21.266310748Z",
      "id": "urn:uuid:79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:21.266310748Z",
      "properties": {
        "status": {
          "@type": [
            "OnOffState",
            "iot:SwitchStatus"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2relay?di=79683ab5-8df1-4b7a-b110-c1b8fe251e7d",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "On/Off Status",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-led2relay",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "iot:Actuator",
        "iot:BinarySwitch"
      ],
      "created": "2020-12-18T12:44:17.019909229Z",
      "id": "urn:uuid:893e9dbb-a298-4123-a041-80f386115958",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:17.019909229Z",
      "properties": {
        "status": {
          "@type": [
            "OnOffState",
            "iot:SwitchStatus"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/buzzer0?di=893e9dbb-a298-4123-a041-80f386115958",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/buzzer0?di=893e9dbb-a298-4123-a041-80f386115958",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/buzzer0?di=893e9dbb-a298-4123-a041-80f386115958",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/buzzer0?di=893e9dbb-a298-4123-a041-80f386115958",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/buzzer0?di=893e9dbb-a298-4123-a041-80f386115958",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/buzzer0?di=893e9dbb-a298-4123-a041-80f386115958",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/buzzer0?di=893e9dbb-a298-4123-a041-80f386115958",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/buzzer0?di=893e9dbb-a298-4123-a041-80f386115958",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/buzzer0?di=893e9dbb-a298-4123-a041-80f386115958",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/buzzer0?di=893e9dbb-a298-4123-a041-80f386115958",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:Toggle"
              ],
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "On/Off Status",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-buzzer0",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Light",
        "iot:LightControl",
        "iot:Actuator",
        "iot:BinarySwitch"
      ],
      "actions": {
        "off": {
          "@type": [
            "TurnOff",
            "iot:TurnOff"
          ],
          "description": "Set light status to off (minimum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": false,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn Off",
          "type": "object"
        },
        "on": {
          "@type": [
            "TurnOn",
            "iot:TurnOn"
          ],
          "description": "Set light status to on (maximum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": true,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn On",
          "type": "object"
        }
      },
      "created": "2020-12-18T12:44:20.877130505Z",
      "id": "urn:uuid:8c2c6907-ed4a-4527-8f23-57df6999b8aa",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:20.877130505Z",
      "properties": {
        "status": {
          "@type": [
            "OnOffState",
            "iot:SwitchStatus"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led1red?di=8c2c6907-ed4a-4527-8f23-57df6999b8aa",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "On/Off Status",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-led1red",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Light",
        "iot:Light",
        "iot:Actuator"
      ],
      "actions": {
        "off": {
          "@type": [
            "TurnOff",
            "iot:TurnOff"
          ],
          "description": "Set light status to off (minimum brightness in all colour channels)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "rgbValue": {
              "@type": [
                "iot:ColourData"
              ],
              "items": [
                {
                  "@type": [
                    "iot:RColourData"
                  ],
                  "const": 0,
                  "type": "number"
                },
                {
                  "@type": [
                    "iot:GColourData"
                  ],
                  "const": 0,
                  "type": "number"
                },
                {
                  "@type": [
                    "iot:BColourData"
                  ],
                  "const": 0,
                  "type": "number"
                }
              ],
              "type": "array"
            }
          },
          "required": [
            "rgbValue"
          ],
          "title": "Turn Off",
          "type": "object"
        },
        "on": {
          "@type": [
            "TurnOn",
            "iot:TurnOn"
          ],
          "description": "Set light status to on (maximum brightness in all colour channels)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "rgbValue": {
              "@type": [
                "iot:ColourData"
              ],
              "items": [
                {
                  "@type": [
                    "iot:RColourData"
                  ],
                  "const": 255,
                  "type": "number"
                },
                {
                  "@type": [
                    "iot:GColourData"
                  ],
                  "const": 255,
                  "type": "number"
                },
                {
                  "@type": [
                    "iot:BColourData"
                  ],
                  "const": 255,
                  "type": "number"
                }
              ],
              "type": "array"
            }
          },
          "required": [
            "rgbValue"
          ],
          "title": "Turn On",
          "type": "object"
        }
      },
      "created": "2020-12-18T12:44:26.296054603Z",
      "id": "urn:uuid:ae9b3aa5-1476-4fcb-9908-dd96a293572d",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:26.296054603Z",
      "properties": {
        "colour": {
          "@type": [
            "iot:CurrentColour"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/rgbled1?di=ae9b3aa5-1476-4fcb-9908-dd96a293572d",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "rgbValue": {
              "@type": [
                "iot:ColourData"
              ],
              "items": [
                {
                  "@type": [
                    "iot:RColourData"
                  ],
                  "maximum": 255,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "@type": [
                    "iot:GColourData"
                  ],
                  "maximum": 255,
                  "minimum": 0,
                  "type": "integer"
                },
                {
                  "@type": [
                    "iot:BColourData"
                  ],
                  "maximum": 255,
                  "minimum": 0,
                  "type": "integer"
                }
              ],
              "type": "array"
            }
          },
          "required": [
            "rgbValue"
          ],
          "title": "RGB Colour",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-rgbled1",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "@language": "en"
        }
      ],
      "@type": "Thing",
      "actions": {
        "clear": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/actions/clear",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "safe": false
        },
        "flashMessage": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/actions/flashMessage",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "input": {
            "description": "The message to show where only one letter is displayed at a time. May include the scroll speed and text/background colours.",
            "properties": {
              "backColour": {
                "items": {
                  "maximum": 255,
                  "minimum": 0,
                  "type": "integer"
                },
                "maxItems": 3,
                "minItems": 3,
                "type": "array"
              },
              "speed": {
                "type": "number"
              },
              "textColour": {
                "items": {
                  "maximum": 255,
                  "minimum": 0,
                  "type": "integer"
                },
                "maxItems": 3,
                "minItems": 3,
                "type": "array"
              },
              "textString": {
                "type": "string"
              }
            },
            "required": [
              "textString"
            ],
            "type": "object"
          },
          "safe": false
        },
        "flipH": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/actions/flipH",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "safe": false
        },
        "flipV": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/actions/flipV",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "safe": false
        },
        "setPixel": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/actions/setPixel",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "input": {
            "description": "Set the pixel in the given (x,y) coordinates to a given RGB color.",
            "properties": {
              "b": {
                "maximum": 255,
                "minimum": 0,
                "type": "integer"
              },
              "g": {
                "maximum": 255,
                "minimum": 0,
                "type": "integer"
              },
              "r": {
                "maximum": 255,
                "minimum": 0,
                "type": "integer"
              },
              "x": {
                "maximum": 7,
                "minimum": 0,
                "type": "integer"
              },
              "y": {
                "maximum": 7,
                "minimum": 0,
                "type": "integer"
              }
            },
            "required": [
              "x",
              "y",
              "r",
              "g",
              "b"
            ],
            "type": "object"
          },
          "safe": false
        },
        "showLetter": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/actions/showLetter",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "input": {
            "description": "The letter to show. May include text/background colours.",
            "properties": {
              "backColour": {
                "items": {
                  "maximum": 255,
                  "minimum": 0,
                  "type": "integer"
                },
                "maxItems": 3,
                "minItems": 3,
                "type": "array"
              },
              "letter": {
                "maxLength": 1,
                "type": "string"
              },
              "textColour": {
                "items": {
                  "maximum": 255,
                  "minimum": 0,
                  "type": "integer"
                },
                "maxItems": 3,
                "minItems": 3,
                "type": "array"
              }
            },
            "required": [
              "letter"
            ],
            "type": "object"
          },
          "safe": false
        },
        "showMessage": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/actions/showMessage",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            }
          ],
          "idempotent": false,
          "input": {
            "description": "The message to show. May include the scrolling speed and text/background colours.",
            "properties": {
              "backColour": {
                "items": {
                  "maximum": 255,
                  "minimum": 0,
                  "type": "integer"
                },
                "maxItems": 3,
                "minItems": 3,
                "type": "array"
              },
              "scrollSpeed": {
                "description": "seconds paused between letters.",
                "maximum": 1,
                "minimum": 0,
                "type": "number",
                "unit": "second"
              },
              "textColour": {
                "items": {
                  "maximum": 255,
                  "minimum": 0,
                  "type": "integer"
                },
                "maxItems": 3,
                "minItems": 3,
                "type": "array"
              },
              "textString": {
                "type": "string"
              }
            },
            "required": [
              "textString",
              "scrollSpeed"
            ],
            "type": "object"
          },
          "safe": false
        }
      },
      "created": "2020-12-18T12:44:00.680780626Z",
      "description": "Raspberry Pi SenseHat",
      "events": {
        "joystickHold": {
          "data": {
            "enum": [
              "left",
              "right",
              "up",
              "down",
              "click"
            ],
            "type": "string"
          },
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/events/joystickHold",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            }
          ]
        },
        "joystickPress": {
          "data": {
            "enum": [
              "left",
              "right",
              "up",
              "down",
              "click"
            ],
            "type": "string"
          },
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/events/joystickPress",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            }
          ]
        },
        "joystickRelease": {
          "data": {
            "enum": [
              "left",
              "right",
              "up",
              "down",
              "click"
            ],
            "type": "string"
          },
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/events/joystickRelease",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            }
          ]
        }
      },
      "forms": [
        {
          "contentType": "application/json",
          "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties",
            "writeallproperties",
            "writemultipleproperties"
          ]
        }
      ],
      "id": "urn:uuid:aeb3ca28-9635-4b73-ac95-a21dffb6ec88",
      "modified": "2020-12-18T12:44:08.414839363Z",
      "properties": {
        "acceleration": {
          "description": "Get 3 Floats representing the acceleration intensity of each axis in Gs",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/properties/acceleration",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/properties/acceleration/observable",
              "op": [
                "observeproperty"
              ],
              "subprotocol": "longpoll"
            }
          ],
          "observable": true,
          "properties": {
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "z": {
              "type": "number"
            }
          },
          "readOnly": true,
          "type": "object",
          "writeOnly": false
        },
        "compass": {
          "description": "Get 3 Floats representing the magnetic intensity of the axis in microteslas.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/properties/compass",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/properties/compass/observable",
              "op": [
                "observeproperty"
              ],
              "subprotocol": "longpoll"
            }
          ],
          "observable": true,
          "properties": {
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "z": {
              "type": "number"
            }
          },
          "readOnly": true,
          "type": "object",
          "writeOnly": false
        },
        "displayRotation": {
          "description": "The rotation of the display. 0 is with the HDMI port facing down.",
          "enum": [
            0,
            90,
            180,
            270
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/properties/displayRotation",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": false,
          "type": "integer",
          "writeOnly": false
        },
        "eventHistory": {
          "description": "An array containing the complete event history.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/properties/eventHistory",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            }
          ],
          "items": {
            "type": "string"
          },
          "observable": false,
          "readOnly": true,
          "type": "array",
          "writeOnly": false
        },
        "gyro": {
          "description": "Get 3 Floats representing the rotational intensity of each axis in rads/second.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/properties/gyro",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/properties/gyro/observable",
              "op": [
                "observeproperty"
              ],
              "subprotocol": "longpoll"
            }
          ],
          "observable": true,
          "properties": {
            "x": {
              "type": "number"
            },
            "y": {
              "type": "number"
            },
            "z": {
              "type": "number"
            }
          },
          "readOnly": true,
          "type": "object",
          "writeOnly": false
        },
        "humidity": {
          "description": "The percentage of relative humidity.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/properties/humidity",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/properties/humidity/observable",
              "op": [
                "observeproperty"
              ],
              "subprotocol": "longpoll"
            }
          ],
          "observable": true,
          "readOnly": true,
          "type": "number",
          "writeOnly": false
        },
        "lowLight": {
          "description": "The LED Matrix low light mode.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/properties/lowLight",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": false,
          "type": "boolean",
          "writeOnly": false
        },
        "pixels": {
          "description": "An array containing the current colours of all LEDs.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/properties/pixels",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            }
          ],
          "items": {
            "items": {
              "maximum": 255,
              "minimum": 0,
              "type": "integer"
            },
            "maxItems": 3,
            "minItems": 3,
            "type": "array"
          },
          "maxItems": 64,
          "minItems": 64,
          "observable": false,
          "readOnly": false,
          "type": "array",
          "writeOnly": false
        },
        "pressure": {
          "description": "The current pressure in Millibars.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/properties/pressure",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/properties/pressure/observable",
              "op": [
                "observeproperty"
              ],
              "subprotocol": "longpoll"
            }
          ],
          "observable": true,
          "readOnly": true,
          "type": "number",
          "writeOnly": false
        },
        "temperature": {
          "description": "The current temperature in degrees Celsius.",
          "forms": [
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/properties/temperature",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://esiremotelab.esi.ei.tum.de:8081/SenseHat3/properties/temperature/observable",
              "op": [
                "observeproperty"
              ],
              "subprotocol": "longpoll"
            }
          ],
          "observable": true,
          "readOnly": true,
          "type": "number",
          "writeOnly": false
        }
      },
      "security": "basic_sc",
      "securityDefinitions": {
        "basic_sc": {
          "in": "header",
          "scheme": "basic"
        }
      },
      "title": "SenseHat3",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "sosa": "http://www.w3.org/ns/sosa/"
        },
        {
          "@language": "en"
        }
      ],
      "@type": [
        "Thing"
      ],
      "actions": {
        "startSprinkler": {
          "description": "Run sprinkler for a set time; stops automatically",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/Sprinkler2/actions/startSprinkler",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/Sprinkler2/actions/startSprinkler",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "input": {
            "properties": {
              "timeout": {
                "minimum": 1,
                "type": "number"
              }
            },
            "type": "object"
          },
          "safe": false
        },
        "stopSprinkler": {
          "description": "stop sprinkler immediately",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/Sprinkler2/actions/stopSprinkler",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/Sprinkler2/actions/stopSprinkler",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "safe": false
        }
      },
      "created": "2020-12-18T12:44:13.065757932Z",
      "forms": [
        {
          "contentType": "application/json",
          "href": "http://arces143100.arces.unibo.it:8080/Sprinkler2/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties"
          ]
        }
      ],
      "id": "urn:uuid:b88c666c-2e78-4597-b8fc-94a9ec5f5329",
      "links": [
        {
          "href": "http://arces143100.arces.unibo.it/assets/farm/sprinkler.obj",
          "rel": "model"
        }
      ],
      "modified": "2020-12-18T12:44:13.065757932Z",
      "position": {
        "x": 11.735054969787598,
        "y": 0.5283291339874268,
        "z": 8.872842788696289
      },
      "properties": {
        "status": {
          "enum": [
            "on",
            "off"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/Sprinkler2/properties/status",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/Sprinkler2/properties/status",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": true,
          "type": "string",
          "writeOnly": false
        }
      },
      "security": "no_sec",
      "securityDefinitions": {
        "no_sec": {
          "scheme": "nosec"
        }
      },
      "title": "Sprinkler2",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Light",
        "iot:LightControl",
        "iot:Actuator",
        "iot:BinarySwitch"
      ],
      "actions": {
        "off": {
          "@type": [
            "TurnOff",
            "iot:TurnOff"
          ],
          "description": "Set light status to off (minimum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": false,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn Off",
          "type": "object"
        },
        "on": {
          "@type": [
            "TurnOn",
            "iot:TurnOn"
          ],
          "description": "Set light status to on (maximum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": true,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn On",
          "type": "object"
        }
      },
      "created": "2020-12-18T12:44:17.789053506Z",
      "id": "urn:uuid:c331fb1b-8568-48be-9033-4aaaa95bf2cf",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:17.789053506Z",
      "properties": {
        "status": {
          "@type": [
            "OnOffState",
            "iot:SwitchStatus"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0red?di=c331fb1b-8568-48be-9033-4aaaa95bf2cf",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "On/Off Status",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-led0red",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Motion",
        "iot:MotionControl",
        "iot:Sensor"
      ],
      "created": "2020-12-18T12:44:24.734353747Z",
      "id": "urn:uuid:c440e5ef-a02f-49cf-b036-00b0738b0d86",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:24.734353747Z",
      "properties": {
        "motion": {
          "@type": [
            "Occupancy",
            "iot:MotionDetected"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/motion2?di=c440e5ef-a02f-49cf-b036-00b0738b0d86",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/motion2?di=c440e5ef-a02f-49cf-b036-00b0738b0d86",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/motion2?di=c440e5ef-a02f-49cf-b036-00b0738b0d86",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/motion2?di=c440e5ef-a02f-49cf-b036-00b0738b0d86",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/motion2?di=c440e5ef-a02f-49cf-b036-00b0738b0d86",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/motion2?di=c440e5ef-a02f-49cf-b036-00b0738b0d86",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/motion2?di=c440e5ef-a02f-49cf-b036-00b0738b0d86",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/motion2?di=c440e5ef-a02f-49cf-b036-00b0738b0d86",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/motion2?di=c440e5ef-a02f-49cf-b036-00b0738b0d86",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/motion2?di=c440e5ef-a02f-49cf-b036-00b0738b0d86",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "type": "boolean"
            }
          },
          "readOnly": true,
          "required": [
            "value"
          ],
          "title": "Motion Sense Status",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-motion2",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Meter",
        "iot:IlluminanceSensing",
        "iot:Sensor"
      ],
      "created": "2020-12-18T12:44:18.559106856Z",
      "id": "urn:uuid:c75fe336-28d3-4b02-b52c-9a4daa9577f6",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:18.559106856Z",
      "properties": {
        "illuminance": {
          "@type": [
            "MultiLevelState",
            "iot:Illuminance"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/illuminance2?di=c75fe336-28d3-4b02-b52c-9a4daa9577f6",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/illuminance2?di=c75fe336-28d3-4b02-b52c-9a4daa9577f6",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/illuminance2?di=c75fe336-28d3-4b02-b52c-9a4daa9577f6",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/illuminance2?di=c75fe336-28d3-4b02-b52c-9a4daa9577f6",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/illuminance2?di=c75fe336-28d3-4b02-b52c-9a4daa9577f6",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/illuminance2?di=c75fe336-28d3-4b02-b52c-9a4daa9577f6",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/illuminance2?di=c75fe336-28d3-4b02-b52c-9a4daa9577f6",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/illuminance2?di=c75fe336-28d3-4b02-b52c-9a4daa9577f6",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/illuminance2?di=c75fe336-28d3-4b02-b52c-9a4daa9577f6",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/illuminance2?di=c75fe336-28d3-4b02-b52c-9a4daa9577f6",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:IlluminanceData"
              ],
              "type": "number"
            }
          },
          "readOnly": true,
          "required": [
            "value"
          ],
          "title": "Illuminance",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-illuminance2",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "sosa": "http://www.w3.org/ns/sosa/"
        },
        {
          "@language": "en"
        }
      ],
      "@type": [
        "Thing"
      ],
      "actions": {
        "startSprinkler": {
          "description": "Run sprinkler for a set time; stops automatically",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/Sprinkler1/actions/startSprinkler",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/Sprinkler1/actions/startSprinkler",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "input": {
            "properties": {
              "timeout": {
                "minimum": 1,
                "type": "number"
              }
            },
            "type": "object"
          },
          "safe": false
        },
        "stopSprinkler": {
          "description": "stop sprinkler immediately",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/Sprinkler1/actions/stopSprinkler",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/Sprinkler1/actions/stopSprinkler",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "safe": false
        }
      },
      "created": "2020-12-18T12:44:14.604601487Z",
      "forms": [
        {
          "contentType": "application/json",
          "href": "http://arces143100.arces.unibo.it:8080/Sprinkler1/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties"
          ]
        }
      ],
      "id": "urn:uuid:c97f97ac-44c0-4a7a-85f1-fdd1b09cac84",
      "links": [
        {
          "href": "http://arces143100.arces.unibo.it/assets/farm/sprinkler.obj",
          "rel": "model"
        }
      ],
      "modified": "2020-12-18T12:44:14.604601487Z",
      "position": {
        "x": 9.865346908569336,
        "y": -8.836591720581055,
        "z": 8.362541198730469
      },
      "properties": {
        "status": {
          "enum": [
            "on",
            "off"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/Sprinkler1/properties/status",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/Sprinkler1/properties/status",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": true,
          "type": "string",
          "writeOnly": false
        }
      },
      "security": "no_sec",
      "securityDefinitions": {
        "no_sec": {
          "scheme": "nosec"
        }
      },
      "title": "Sprinkler1",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "sosa": "https://opengeospatial.github.io/ELFIE/json-ld/sosa.jsonld"
        },
        {
          "ssn": "https://raw.githubusercontent.com/oeg-upm/ssn-resource-center/master/json-ld/ssnContextV2.json"
        },
        {
          "qudt": "http://www.qudt.org/qudt/owl/1.0.0/quantity/"
        },
        {
          "xsd": "http://www.w3.org/2001/XMLSchema"
        },
        {
          "san": "https://www.irit.fr/recherches/MELODI/ontologies/SAN.owl"
        },
        {
          "@language": "en"
        }
      ],
      "@id": "urn:dev:serial:DA00AW2N",
      "@sensorAddress": "2",
      "@sensorType": "measure",
      "@serialNumber": "DA00AW2N",
      "@type": [
        "sosa:Sensor",
        "Thing"
      ],
      "created": "2020-12-18T12:44:10.361598493Z",
      "description": "IMU sensor",
      "events": {
        "AccelerationThresholdReached": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-2-measure/events/AccelerationThresholdReached",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            }
          ]
        },
        "GyroscopeThresholdReached": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-2-measure/events/GyroscopeThresholdReached",
              "op": [
                "subscribeevent"
              ],
              "subprotocol": "longpoll"
            }
          ]
        }
      },
      "forms": [
        {
          "contentType": "application/json",
          "href": "http://example.it/DA00AW2N-2-measure/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties"
          ]
        }
      ],
      "id": "urn:uuid:cc77aab3-083f-4c81-a13c-c3dea3041357",
      "links": [
        {
          "href": "./DA00AW2N-2-control",
          "rel": "san:controlledBy"
        },
        {
          "href": "https://api.jsonbin.io/b/5f6afc2b7243cd7e8241dc6b",
          "rel": "sosa:isHostedBy",
          "type": "application/ld+json"
        }
      ],
      "modified": "2020-12-18T12:44:10.361598493Z",
      "properties": {
        "Acceleration": {
          "@type": "sosa:Observation",
          "description": "Current acceleration reult",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-2-measure/properties/Acceleration",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "properties": {
            "sosa:ResultTime": {
              "@type": "xsd:DateTime",
              "type": "string"
            },
            "sosa:hasResult": {
              "@type": "sosa:Result",
              "properties": {
                "x": {
                  "type": "number",
                  "unit": "qudt:Gravity"
                },
                "y": {
                  "type": "number",
                  "unit": "qudt:Gravity"
                },
                "z": {
                  "type": "number",
                  "unit": "qudt:Gravity"
                }
              },
              "type": "object"
            }
          },
          "readOnly": true,
          "ssn:forProperty": "qudt:Acceleration",
          "type": "object",
          "writeOnly": false
        },
        "AccelerationSamples": {
          "description": "Current acceleration result saples",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-2-measure/properties/AccelerationSamples",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            }
          ],
          "items": {
            "@type": "sosa:Observation",
            "properties": {
              "sosa:ResultTime": {
                "@type": "xsd:DateTime",
                "type": "string"
              },
              "sosa:hasResult": {
                "@type": "sosa:Result",
                "properties": {
                  "x": {
                    "type": "number",
                    "unit": "qudt:Gravity"
                  },
                  "y": {
                    "type": "number",
                    "unit": "qudt:Gravity"
                  },
                  "z": {
                    "type": "number",
                    "unit": "qudt:Gravity"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "observable": false,
          "readOnly": true,
          "ssn:forProperty": "qudt:Acceleration",
          "type": "array",
          "writeOnly": false
        },
        "AccelerationThreshold": {
          "description": "Get a threshold for ThresholdReached event",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-2-measure/properties/AccelerationThreshold",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": true,
          "type": "number",
          "value": 1000,
          "writeOnly": false
        },
        "GravityScale": {
          "description": "Get a gravivity scale used to output data samples",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-2-measure/properties/GravityScale",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": true,
          "type": "number",
          "value": 2,
          "writeOnly": false
        },
        "Gyroscope": {
          "@type": "sosa:Observation",
          "description": "Current gyroscope result",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-2-measure/properties/Gyroscope",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "properties": {
            "sosa:ResultTime": {
              "@type": "xsd:DateTime",
              "type": "string"
            },
            "sosa:hasResult": {
              "@type": "sosa:Result",
              "properties": {
                "x": {
                  "type": "number",
                  "unit": "qudt:Angle"
                },
                "y": {
                  "type": "number",
                  "unit": "qudt:Angle"
                },
                "z": {
                  "type": "number",
                  "unit": "qudt:Angle"
                }
              },
              "type": "object"
            }
          },
          "readOnly": true,
          "ssn:forProperty": "qudt:Angle",
          "type": "object",
          "writeOnly": false
        },
        "GyroscopeSamples": {
          "description": "Current gyroscope result saples",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-2-measure/properties/GyroscopeSamples",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            }
          ],
          "items": {
            "@type": "sosa:Observation",
            "properties": {
              "sosa:ResultTime": {
                "@type": "xsd:DateTime",
                "type": "string"
              },
              "sosa:hasResult": {
                "@type": "sosa:Result",
                "properties": {
                  "x": {
                    "type": "number",
                    "unit": "qudt:Angle"
                  },
                  "y": {
                    "type": "number",
                    "unit": "qudt:Angle"
                  },
                  "z": {
                    "type": "number",
                    "unit": "qudt:Angle"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "observable": false,
          "readOnly": true,
          "ssn:forProperty": "qudt:Angle",
          "type": "array",
          "writeOnly": false
        },
        "GyroscopeScale": {
          "description": "Get a gyroscope scale used to output data samples",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-2-measure/properties/GyroscopeScale",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": true,
          "type": "number",
          "value": 125,
          "writeOnly": false
        },
        "GyroscopeThreshold": {
          "description": "Get a threshold for ThresholdReached event",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-2-measure/properties/GyroscopeThreshold",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": true,
          "type": "number",
          "value": 1000,
          "writeOnly": false
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "title": "DA00AW2N-2-measure",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "sosa": "http://www.w3.org/ns/sosa/"
        },
        {
          "@language": "en"
        }
      ],
      "@type": [
        "Thing"
      ],
      "actions": {
        "startSprinkler": {
          "description": "Run sprinkler for a set time; stops automatically",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/Sprinkler0/actions/startSprinkler",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/Sprinkler0/actions/startSprinkler",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "input": {
            "properties": {
              "timeout": {
                "minimum": 1,
                "type": "number"
              }
            },
            "type": "object"
          },
          "safe": false
        },
        "stopSprinkler": {
          "description": "stop sprinkler immediately",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/Sprinkler0/actions/stopSprinkler",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/Sprinkler0/actions/stopSprinkler",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "safe": false
        }
      },
      "created": "2020-12-18T12:44:15.377624742Z",
      "forms": [
        {
          "contentType": "application/json",
          "href": "http://arces143100.arces.unibo.it:8080/Sprinkler0/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties"
          ]
        }
      ],
      "id": "urn:uuid:e2d46939-9f42-4564-a06a-855ce7aeb176",
      "links": [
        {
          "href": "http://arces143100.arces.unibo.it/assets/farm/sprinkler.obj",
          "rel": "model"
        }
      ],
      "modified": "2020-12-18T12:44:15.377624742Z",
      "position": {
        "x": 25.432559967041016,
        "y": -8.929137229919434,
        "z": 8.846355438232422
      },
      "properties": {
        "status": {
          "enum": [
            "on",
            "off"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://arces143100.arces.unibo.it:8080/Sprinkler0/properties/status",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://arces143100.arces.unibo.it:5683/Sprinkler0/properties/status",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": true,
          "type": "string",
          "writeOnly": false
        }
      },
      "security": "no_sec",
      "securityDefinitions": {
        "no_sec": {
          "scheme": "nosec"
        }
      },
      "title": "Sprinkler0",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Light",
        "iot:LightControl",
        "iot:Actuator",
        "iot:BinarySwitch"
      ],
      "actions": {
        "off": {
          "@type": [
            "TurnOff",
            "iot:TurnOff"
          ],
          "description": "Set light status to off (minimum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": false,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn Off",
          "type": "object"
        },
        "on": {
          "@type": [
            "TurnOn",
            "iot:TurnOn"
          ],
          "description": "Set light status to on (maximum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": true,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn On",
          "type": "object"
        }
      },
      "created": "2020-12-18T12:44:23.581982406Z",
      "id": "urn:uuid:e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:23.581982406Z",
      "properties": {
        "status": {
          "@type": [
            "OnOffState",
            "iot:SwitchStatus"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led2top?di=e6b060cf-dc10-4375-ae08-1f9e2de0aa2b",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "On/Off Status",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-led2top",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Switch",
        "iot:Sensor",
        "iot:BinarySwitch"
      ],
      "created": "2020-12-18T12:44:22.803881242Z",
      "id": "urn:uuid:e7678d50-6a14-426b-a1f0-fb1b8ade4cd5",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:22.803881242Z",
      "properties": {
        "status": {
          "@type": [
            "OnOffState",
            "iot:SwitchStatus"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/toggle2?di=e7678d50-6a14-426b-a1f0-fb1b8ade4cd5",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/toggle2?di=e7678d50-6a14-426b-a1f0-fb1b8ade4cd5",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/toggle2?di=e7678d50-6a14-426b-a1f0-fb1b8ade4cd5",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/toggle2?di=e7678d50-6a14-426b-a1f0-fb1b8ade4cd5",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/toggle2?di=e7678d50-6a14-426b-a1f0-fb1b8ade4cd5",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/toggle2?di=e7678d50-6a14-426b-a1f0-fb1b8ade4cd5",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/toggle2?di=e7678d50-6a14-426b-a1f0-fb1b8ade4cd5",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/toggle2?di=e7678d50-6a14-426b-a1f0-fb1b8ade4cd5",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/toggle2?di=e7678d50-6a14-426b-a1f0-fb1b8ade4cd5",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/toggle2?di=e7678d50-6a14-426b-a1f0-fb1b8ade4cd5",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:Toggle"
              ],
              "type": "boolean"
            }
          },
          "readOnly": true,
          "required": [
            "value"
          ],
          "title": "On/Off Status",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-toggle2",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Temperature",
        "iot:TemperatureSensing",
        "iot:Sensor"
      ],
      "created": "2020-12-18T12:44:18.180002641Z",
      "id": "urn:uuid:e855ad80-c435-4614-a4b7-01d63afc712e",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:18.180002641Z",
      "properties": {
        "temperature": {
          "@type": [
            "MultiLevelState",
            "iot:Temperature"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/temperature2?di=e855ad80-c435-4614-a4b7-01d63afc712e",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/temperature2?di=e855ad80-c435-4614-a4b7-01d63afc712e",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/temperature2?di=e855ad80-c435-4614-a4b7-01d63afc712e",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/temperature2?di=e855ad80-c435-4614-a4b7-01d63afc712e",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/temperature2?di=e855ad80-c435-4614-a4b7-01d63afc712e",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/temperature2?di=e855ad80-c435-4614-a4b7-01d63afc712e",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/temperature2?di=e855ad80-c435-4614-a4b7-01d63afc712e",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/temperature2?di=e855ad80-c435-4614-a4b7-01d63afc712e",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/temperature2?di=e855ad80-c435-4614-a4b7-01d63afc712e",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/temperature2?di=e855ad80-c435-4614-a4b7-01d63afc712e",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:TemperatureData"
              ],
              "type": "number"
            }
          },
          "readOnly": true,
          "required": [
            "value"
          ],
          "title": "Room Temperature",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-temperature2",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "sosa": "https://opengeospatial.github.io/ELFIE/json-ld/sosa.jsonld"
        },
        {
          "ssn": "https://raw.githubusercontent.com/oeg-upm/ssn-resource-center/master/json-ld/ssnContextV2.json"
        },
        {
          "qudt": "http://www.qudt.org/qudt/owl/1.0.0/quantity/"
        },
        {
          "xsd": "http://www.w3.org/2001/XMLSchema"
        },
        {
          "san": "https://www.irit.fr/recherches/MELODI/ontologies/SAN.owl"
        },
        {
          "@language": "en"
        }
      ],
      "@id": "urn:dev:serial:DA00AW2N",
      "@sensorType": "control-network",
      "@serialNumber": "DA00AW2N",
      "@type": "Thing",
      "created": "2020-12-18T12:44:11.520164848Z",
      "description": "Cluster Head test thing",
      "forms": [
        {
          "contentType": "application/json",
          "href": "http://example.it/DA00AW2N-control-network/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties"
          ]
        }
      ],
      "id": "urn:uuid:e9589095-f6df-4124-b3d7-1fcfd163c73e",
      "links": [
        {
          "href": "https://api.jsonbin.io/b/5f6afc2b7243cd7e8241dc6b",
          "rel": "sosa:isHostedBy",
          "type": "application/ld+json"
        }
      ],
      "modified": "2020-12-18T12:44:11.520164848Z",
      "properties": {
        "ControlSensors": {
          "description": "Sensors for control",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-control-network/properties/ControlSensors",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            }
          ],
          "items": {
            "@type": "sosa:Sensor",
            "properties": {
              "href": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "observable": false,
          "readOnly": true,
          "type": "array",
          "writeOnly": false
        },
        "MeasureSensors": {
          "description": "Sensors for measurement",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://example.it/DA00AW2N-control-network/properties/MeasureSensors",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            }
          ],
          "items": {
            "@type": "sosa:Sensor",
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "observable": false,
          "readOnly": true,
          "type": "array",
          "writeOnly": false
        }
      },
      "security": [
        "basic_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "in": "header",
          "scheme": "basic"
        }
      },
      "title": "DA00AW2N-control-network",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Light",
        "iot:LightControl",
        "iot:Actuator",
        "iot:BinarySwitch"
      ],
      "actions": {
        "off": {
          "@type": [
            "TurnOff",
            "iot:TurnOff"
          ],
          "description": "Set light status to off (minimum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": false,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn Off",
          "type": "object"
        },
        "on": {
          "@type": [
            "TurnOn",
            "iot:TurnOn"
          ],
          "description": "Set light status to on (maximum brightness)",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "const": true,
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "Turn On",
          "type": "object"
        }
      },
      "created": "2020-12-18T12:44:25.512407908Z",
      "id": "urn:uuid:ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:25.512407908Z",
      "properties": {
        "status": {
          "@type": [
            "OnOffState",
            "iot:SwitchStatus"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/led0mosfet?di=ea16d184-95ad-4af7-bfc9-53e86f55f3a4",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:StateData"
              ],
              "type": "boolean"
            }
          },
          "required": [
            "value"
          ],
          "title": "On/Off Status",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-led0mosfet",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Switch",
        "iot:Sensor",
        "iot:BinarySwitch"
      ],
      "created": "2020-12-18T12:44:21.647674748Z",
      "id": "urn:uuid:f057c263-58db-4cb1-9470-bba9344e1ba8",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:21.647674748Z",
      "properties": {
        "status": {
          "@type": [
            "OnOffState",
            "iot:SwitchStatus"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/toggle1?di=f057c263-58db-4cb1-9470-bba9344e1ba8",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/toggle1?di=f057c263-58db-4cb1-9470-bba9344e1ba8",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/toggle1?di=f057c263-58db-4cb1-9470-bba9344e1ba8",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/toggle1?di=f057c263-58db-4cb1-9470-bba9344e1ba8",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/toggle1?di=f057c263-58db-4cb1-9470-bba9344e1ba8",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/toggle1?di=f057c263-58db-4cb1-9470-bba9344e1ba8",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/toggle1?di=f057c263-58db-4cb1-9470-bba9344e1ba8",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/toggle1?di=f057c263-58db-4cb1-9470-bba9344e1ba8",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/toggle1?di=f057c263-58db-4cb1-9470-bba9344e1ba8",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/toggle1?di=f057c263-58db-4cb1-9470-bba9344e1ba8",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:Toggle"
              ],
              "type": "boolean"
            }
          },
          "readOnly": true,
          "required": [
            "value"
          ],
          "title": "On/Off Status",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-toggle1",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://iotschema.org/"
        }
      ],
      "@type": [
        "Thing",
        "Temperature",
        "iot:TemperatureSensing",
        "iot:Sensor"
      ],
      "created": "2020-12-18T12:44:25.11893624Z",
      "id": "urn:uuid:f2305852-4f82-47ce-871d-a0af237932c1",
      "links": [
        {
          "href": "https://github.com/mmccool/ocf-wot-metadata-bridge",
          "rel": "repository",
          "type": "application/vnd.github.v3+json"
        }
      ],
      "modified": "2020-12-18T12:44:25.11893624Z",
      "properties": {
        "temperature": {
          "@type": [
            "MultiLevelState",
            "iot:Temperature"
          ],
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/temperature0?di=f2305852-4f82-47ce-871d-a0af237932c1",
              "op": "readproperty"
            },
            {
              "contentType": "application/json",
              "href": "http://upsq1c.local:8000/api/oic/a/temperature0?di=f2305852-4f82-47ce-871d-a0af237932c1",
              "htv:methodName": "POST",
              "op": "writeproperty"
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/temperature0?di=f2305852-4f82-47ce-871d-a0af237932c1",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/temperature0?di=f2305852-4f82-47ce-871d-a0af237932c1",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/temperature0?di=f2305852-4f82-47ce-871d-a0af237932c1",
              "op": "readproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/temperature0?di=f2305852-4f82-47ce-871d-a0af237932c1",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "basic_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/temperature0?di=f2305852-4f82-47ce-871d-a0af237932c1",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://portal.mmccool.net:8090/api/oic/a/temperature0?di=f2305852-4f82-47ce-871d-a0af237932c1",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/temperature0?di=f2305852-4f82-47ce-871d-a0af237932c1",
              "op": "readproperty",
              "security": [
                "digest_sc"
              ]
            },
            {
              "contentType": "application/json",
              "href": "https://tiktok.mmccool.org:8091/api/oic/a/temperature0?di=f2305852-4f82-47ce-871d-a0af237932c1",
              "htv:methodName": "POST",
              "op": "writeproperty",
              "security": [
                "digest_sc"
              ]
            }
          ],
          "observable": true,
          "properties": {
            "id": {
              "type": "string"
            },
            "value": {
              "@type": [
                "iot:TemperatureData"
              ],
              "type": "number"
            }
          },
          "readOnly": true,
          "required": [
            "value"
          ],
          "title": "Room Temperature",
          "type": "object"
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "basic_sc": {
          "scheme": "basic"
        },
        "digest_sc": {
          "scheme": "digest"
        },
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "mailto:michael.mccool@intel.com",
      "title": "Intel-OCF-temperature0",
      "ttl": 86400,
      "version": {
        "instance": "0.1.0"
      }
    },
    {
      "@context": "https://www.w3.org/2019/wot/td/v1",
      "@type": "Thing",
      "actions": {
        "int-int": {
          "description": "Action with integer input and output",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/testthing/actions/int-int",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/testthing/actions/int-int",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "input": {
            "type": "integer"
          },
          "output": {
            "type": "integer"
          },
          "safe": false,
          "title": "int-int Action"
        },
        "int-string": {
          "description": "Action with integer input and string output",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/testthing/actions/int-string",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/testthing/actions/int-string",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "input": {
            "type": "integer"
          },
          "output": {
            "type": "string"
          },
          "safe": false,
          "title": "int-string Action"
        },
        "int-void": {
          "description": "Action with integer input, but without output",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/testthing/actions/int-void",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/testthing/actions/int-void",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "input": {
            "type": "integer"
          },
          "safe": false,
          "title": "int-void Action"
        },
        "obj-void": {
          "description": "Action with object input, but wihtout output",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/testthing/actions/obj-void",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/testthing/actions/obj-void",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "input": {
            "properties": {
              "prop1": {
                "type": "integer"
              },
              "prop2": {
                "type": "string"
              }
            },
            "required": [
              "prop1",
              "prop2"
            ],
            "type": "object"
          },
          "safe": false,
          "title": "obj-void Action"
        },
        "void-int": {
          "description": "Action without input nor output",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/testthing/actions/void-int",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/testthing/actions/void-int",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "safe": false,
          "title": "void-void Action"
        },
        "void-obj": {
          "description": "Action without input, but with object output",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/testthing/actions/void-obj",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/testthing/actions/void-obj",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "output": {
            "properties": {
              "prop1": {
                "type": "integer"
              },
              "prop2": {
                "type": "string"
              }
            },
            "required": [
              "prop1",
              "prop2"
            ],
            "type": "object"
          },
          "safe": false,
          "title": "void-obj Action"
        },
        "void-void": {
          "description": "Action without input nor output",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/testthing/actions/void-void",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/testthing/actions/void-void",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "safe": false,
          "title": "void-void Action"
        }
      },
      "created": "2020-12-18T12:44:27.462144835Z",
      "events": {
        "on-bool": {
          "data": {
            "type": "boolean"
          },
          "description": "Event with boolean data",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/testthing/events/on-bool",
              "op": [
                "subscribeevent",
                "unsubscribeevent"
              ],
              "subprotocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "ws://plugfest.thingweb.io:8083/testthing/events/on-bool",
              "op": "subscribeevent"
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/testthing/events/on-bool",
              "op": [
                "subscribeevent",
                "unsubscribeevent"
              ]
            }
          ],
          "title": "on-bool Event"
        },
        "on-int": {
          "data": {
            "type": "integer"
          },
          "description": "Event with integer data",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/testthing/events/on-int",
              "op": [
                "subscribeevent",
                "unsubscribeevent"
              ],
              "subprotocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "ws://plugfest.thingweb.io:8083/testthing/events/on-int",
              "op": "subscribeevent"
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/testthing/events/on-int",
              "op": [
                "subscribeevent",
                "unsubscribeevent"
              ]
            }
          ],
          "title": "on-int Event"
        },
        "on-num": {
          "data": {
            "type": "number"
          },
          "description": "Event with number data",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/testthing/events/on-num",
              "op": [
                "subscribeevent",
                "unsubscribeevent"
              ],
              "subprotocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "ws://plugfest.thingweb.io:8083/testthing/events/on-num",
              "op": "subscribeevent"
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/testthing/events/on-num",
              "op": [
                "subscribeevent",
                "unsubscribeevent"
              ]
            }
          ],
          "title": "on-num Event"
        }
      },
      "forms": [
        {
          "contentType": "application/json",
          "href": "http://plugfest.thingweb.io:8083/testthing/all/properties",
          "op": [
            "writeallproperties",
            "writemultipleproperties"
          ]
        }
      ],
      "id": "urn:uuid:f8248a5d-2c9f-4480-acda-f6d30e96cbad",
      "modified": "2020-12-18T12:44:27.462144835Z",
      "properties": {
        "array": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/testthing/properties/array",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/testthing/properties/array",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            }
          ],
          "items": {
            
          },
          "observable": false,
          "readOnly": false,
          "title": "Tuple",
          "type": "array",
          "writeOnly": false
        },
        "bool": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/testthing/properties/bool",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/testthing/properties/bool",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": false,
          "title": "true/false",
          "type": "boolean",
          "writeOnly": false
        },
        "int": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/testthing/properties/int",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/testthing/properties/int",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": false,
          "title": "Integer number",
          "type": "integer",
          "writeOnly": false
        },
        "num": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/testthing/properties/num",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/testthing/properties/num",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": false,
          "title": "Floating point",
          "type": "number",
          "writeOnly": false
        },
        "object": {
          "description": "Object with ID and name",
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/testthing/properties/object",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/testthing/properties/object",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            }
          ],
          "observable": false,
          "properties": {
            "id": {
              "description": "Internal identifier",
              "title": "ID",
              "type": "integer"
            },
            "name": {
              "description": "Public name",
              "title": "Name",
              "type": "string"
            }
          },
          "readOnly": false,
          "title": "ID-name",
          "type": "object",
          "writeOnly": false
        },
        "string": {
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/testthing/properties/string",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/testthing/properties/string",
              "op": [
                "readproperty",
                "writeproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": false,
          "type": "string",
          "writeOnly": false
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "title": "TestThing",
      "ttl": 86400
    },
    {
      "@context": [
        "https://www.w3.org/2019/wot/td/v1",
        {
          "iot": "http://example.org/iot"
        },
        {
          "@language": "en"
        }
      ],
      "@type": "Thing",
      "actions": {
        "decrement": {
          "description": "Decrementing counter value (with optional step parameter as uriVariable)",
          "descriptions": {
            "de": "Zähler verringern",
            "en": "decrement value",
            "it": "decrementare valore"
          },
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/counter/actions/decrement{?step}",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/counter/actions/decrement",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "safe": false,
          "uriVariables": {
            "step": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer"
            }
          }
        },
        "increment": {
          "description": "Incrementing counter value (with optional step parameter as uriVariable)",
          "descriptions": {
            "de": "Zähler erhöhen",
            "en": "increment value",
            "it": "incrementare valore"
          },
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/counter/actions/increment{?step}",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/counter/actions/increment",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "safe": false,
          "uriVariables": {
            "step": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer"
            }
          }
        },
        "reset": {
          "description": "Resetting counter value",
          "descriptions": {
            "de": "Zähler resettieren",
            "en": "Resetting counter value",
            "it": "resettare valore"
          },
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/counter/actions/reset",
              "htv:methodName": "POST",
              "op": [
                "invokeaction"
              ]
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/counter/actions/reset",
              "op": "invokeaction"
            }
          ],
          "idempotent": false,
          "safe": false
        }
      },
      "created": "2020-12-18T12:44:28.230282915Z",
      "description": "counter example Thing",
      "descriptions": {
        "de": "Zähler Beispiel Ding",
        "en": "counter example Thing",
        "it": "Contatore Esempio"
      },
      "events": {
        "change": {
          "description": "change event",
          "descriptions": {
            "de": "Änderungsnachricht",
            "en": "change event",
            "it": "resettare valore"
          },
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/counter/events/change",
              "op": [
                "subscribeevent",
                "unsubscribeevent"
              ],
              "subprotocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "ws://plugfest.thingweb.io:8083/counter/events/change",
              "op": "subscribeevent"
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/counter/events/change",
              "op": [
                "subscribeevent",
                "unsubscribeevent"
              ]
            }
          ]
        }
      },
      "forms": [
        {
          "contentType": "application/json",
          "href": "http://plugfest.thingweb.io:8083/counter/all/properties",
          "op": [
            "readallproperties",
            "readmultipleproperties"
          ]
        }
      ],
      "id": "urn:uuid:fc6dafae-b2df-4fa1-ac43-b6466d03bc38",
      "modified": "2020-12-18T12:44:28.230282915Z",
      "properties": {
        "count": {
          "description": "current counter value",
          "descriptions": {
            "de": "Derzeitiger Zähler Stand",
            "en": "current counter value",
            "it": "valore attuale del contatore"
          },
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/counter/properties/count",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/counter/properties/count/observable",
              "op": [
                "observeproperty",
                "unobserveproperty"
              ],
              "subprotocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/counter/properties/count",
              "op": [
                "readproperty",
                "observeproperty",
                "unobserveproperty"
              ]
            }
          ],
          "iot:Custom": "example annotation",
          "observable": true,
          "readOnly": true,
          "type": "integer",
          "writeOnly": false
        },
        "countAsImage": {
          "description": "current counter value as SVG image",
          "forms": [
            {
              "contentType": "image/svg+xml",
              "href": "http://plugfest.thingweb.io:8083/counter/properties/countAsImage{?fill}",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "image/svg+xml",
              "href": "coap://plugfest.thingweb.io:5683/counter/properties/countAsImage",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": true,
          "uriVariables": {
            "fill": {
              "type": "string"
            }
          },
          "writeOnly": false
        },
        "lastChange": {
          "description": "last change of counter value",
          "descriptions": {
            "de": "Letzte Änderung",
            "en": "last change of counter value",
            "it": "ultima modifica del valore"
          },
          "forms": [
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/counter/properties/lastChange",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "application/json",
              "href": "http://plugfest.thingweb.io:8083/counter/properties/lastChange/observable",
              "op": [
                "observeproperty",
                "unobserveproperty"
              ],
              "subprotocol": "longpoll"
            },
            {
              "contentType": "application/json",
              "href": "coap://plugfest.thingweb.io:5683/counter/properties/lastChange",
              "op": [
                "readproperty",
                "observeproperty",
                "unobserveproperty"
              ]
            }
          ],
          "observable": true,
          "readOnly": true,
          "type": "string",
          "writeOnly": false
        },
        "redDotImage": {
          "description": "Red dot image as PNG",
          "forms": [
            {
              "contentType": "image/png",
              "href": "http://plugfest.thingweb.io:8083/counter/properties/redDotImage",
              "htv:methodName": "GET",
              "op": [
                "readproperty"
              ]
            },
            {
              "contentType": "image/png",
              "href": "coap://plugfest.thingweb.io:5683/counter/properties/redDotImage",
              "op": [
                "readproperty"
              ]
            }
          ],
          "observable": false,
          "readOnly": true,
          "writeOnly": false
        }
      },
      "security": [
        "nosec_sc"
      ],
      "securityDefinitions": {
        "nosec_sc": {
          "scheme": "nosec"
        }
      },
      "support": "git://github.com/eclipse/thingweb.node-wot.git",
      "title": "counter",
      "titles": {
        "de": "zähler",
        "en": "counter",
        "it": "Contatore"
      },
      "ttl": 86400
    }
  ],
  "page": 1,
  "perPage": 100,
  "total": 66
}